<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../../pcf.xsd">
  <PanelSet
    id="HOMainCoveragesHOEPanelSet">
    <Require
      name="holine"
      type="HomeownersLine_HOE"/>
    <Require
      name="dwelling"
      type="Dwelling_HOE"/>
    <Require
      name="openForEdit"
      type="boolean"/>
    <Variable
      initialValue="&quot;HODW_SectionI_HOE&quot;"
      name="covCategorySectionI"/>
    <Variable
      initialValue="&quot;HODW_SectionII_HOE&quot;"
      name="covCategorySectionII"/>
    <Variable
      initialValue="&quot;HOLI_Additional_HOE&quot;"
      name="covCategoryHOLIAdditional"/>
    <Variable
      initialValue="&quot;HODW_Additional_HOE&quot;"
      name="covCategoryHODWAdditional"/>
    <Variable
      initialValue="&quot;DPDW_LiabilityCoverages_HOE&quot;"
      name="covCategoryDPDWLiability"/>
    <Variable
      initialValue="&quot;HOSL_AdditionalSchedLiab_HOE_Ext&quot;"
      name="covCategoryHOSLAdditional"/>
    <Variable
      initialValue="&quot;HODW_AdditionalScheduled_HOE_Ext&quot;"
      name="covCategoryHODWAdditionalSchd"/>
    <PanelRow>
      <PanelColumn>
        <PanelRef>
          <TitleBar
            title="holine.Pattern.getCoverageCategory(covCategorySectionI).DisplayName"/>
          <DetailViewPanel>
            <Variable
              initialValue="holine.Pattern.getCoverageCategory(covCategorySectionI).coveragePatternsForEntity(entity.Dwelling_HOE).where(\ coveragePattern -&gt; dwelling.isCoverageAvailable(coveragePattern))"
              name="hoLineDwellingCoveragePatterns"
              recalculateOnRefresh="true"
              type="gw.api.productmodel.CoveragePattern[]"/>
            <InputColumn
              labelWidth="250">
              <InputIterator
                elementName="coveragePattern"
                forceRefreshDespiteChangedEntries="true"
                id="coveragePatterIterId1"
                value="hoLineDwellingCoveragePatterns">
                <IteratorSort
                  sortBy="coveragePattern.Priority"
                  sortOrder="1"/>
                <InputSetRef
                  def="HOCoverageInputSet(coveragePattern, dwelling, openForEdit)"
                  mode="coveragePattern.CodeIdentifier"/>
              </InputIterator>
            </InputColumn>
          </DetailViewPanel>
        </PanelRef>
      </PanelColumn>
      <PanelColumn>
        <PanelRef
          id="HODwellingAdditionalPanel">
          <TitleBar
            title="holine.Pattern.getCoverageCategory(covCategoryHODWAdditional).DisplayName"
            visible="coveragePatternsExistForDwelling(covCategoryHODWAdditional)"/>
          <DetailViewPanel>
            <Variable
              initialValue="holine.Pattern.getCoverageCategory(covCategoryHODWAdditional).coveragePatternsForEntity(entity.Dwelling_HOE).where(\ coveragePattern -&gt; dwelling.isCoverageAvailable(coveragePattern))"
              name="hoDWAddlCoveragePatterns"
              recalculateOnRefresh="true"
              type="gw.api.productmodel.CoveragePattern[]"/>
            <InputColumn
              labelWidth="250">
              <InputIterator
                elementName="coveragePattern"
                forceRefreshDespiteChangedEntries="true"
                id="coveragePatternHODW"
                value="hoDWAddlCoveragePatterns">
                <IteratorSort
                  sortBy="coveragePattern"
                  sortOrder="1"/>
                <InputSetRef
                  def="HOCoverageInputSet(coveragePattern, dwelling, openForEdit)"
                  mode="coveragePattern.CodeIdentifier"/>
              </InputIterator>
            </InputColumn>
          </DetailViewPanel>
        </PanelRef>
        <PanelRef
          id="HODWAddtionalCovPanelSchd">
          <TitleBar
            title="holine.Pattern.getCoverageCategory(covCategoryHODWAdditionalSchd).DisplayName"
            visible="coveragePatternsExistForDwelling(covCategoryHODWAdditionalSchd)"/>
          <DetailViewPanel>
            <Variable
              initialValue="holine.Pattern.getCoverageCategory(covCategoryHODWAdditionalSchd).coveragePatternsForEntity(entity.Dwelling_HOE).where(\ coveragePattern -&gt; dwelling.isCoverageAvailable(coveragePattern))"
              name="hodwAddlSchdCoveragePatterns"
              recalculateOnRefresh="true"
              type="gw.api.productmodel.CoveragePattern[]"/>
            <InputColumn
              labelWidth="250">
              <InputIterator
                elementName="coveragePattern"
                forceRefreshDespiteChangedEntries="true"
                id="coveragePatternAddSch"
                value="hodwAddlSchdCoveragePatterns">
                <IteratorSort
                  sortBy="coveragePattern"
                  sortOrder="1"/>
                <InputSetRef
                  def="HOCoverageInputSet(coveragePattern, dwelling, openForEdit)"
                  mode="coveragePattern.CodeIdentifier"/>
              </InputIterator>
            </InputColumn>
          </DetailViewPanel>
        </PanelRef>
        <PanelRef>
          <TitleBar
            title="holine.Pattern.getCoverageCategory(covCategorySectionII).DisplayName"/>
          <DetailViewPanel>
            <Variable
              initialValue="retrieveSectionIICoverages()"
              name="sectionIICoveragePatterns"
              recalculateOnRefresh="true"
              type="gw.api.productmodel.CoveragePattern[]"/>
            <InputColumn
              labelWidth="250">
              <InputIterator
                elementName="coveragePattern"
                forceRefreshDespiteChangedEntries="true"
                id="coveragePatterIterId2"
                value="sectionIICoveragePatterns">
                <IteratorSort
                  sortBy="coveragePattern"
                  sortOrder="1"/>
                <InputSetRef
                  def="HOCoverageInputSet(coveragePattern, holine, openForEdit)"
                  mode="coveragePattern.CodeIdentifier"/>
              </InputIterator>
            </InputColumn>
          </DetailViewPanel>
        </PanelRef>
        <PanelRef
          id="HOLineAddtionalCovPanel">
          <TitleBar
            title="holine.Pattern.getCoverageCategory(covCategoryHOLIAdditional).DisplayName"
            visible="coveragePatternsExistForHOLine(covCategoryHOLIAdditional)"/>
          <DetailViewPanel>
            <Variable
              initialValue="holine.Pattern.getCoverageCategory(covCategoryHOLIAdditional).coveragePatternsForEntity(entity.HomeownersLine_HOE).where(\ coveragePattern -&gt; holine.isCoverageAvailable(coveragePattern))"
              name="hoLIAddlCoveragePatterns"
              recalculateOnRefresh="true"
              type="gw.api.productmodel.CoveragePattern[]"/>
            <InputColumn
              labelWidth="250">
              <InputIterator
                elementName="coveragePattern"
                forceRefreshDespiteChangedEntries="true"
                id="coveragePatternHOLI"
                value="hoLIAddlCoveragePatterns">
                <IteratorSort
                  sortBy="coveragePattern"
                  sortOrder="1"/>
                <InputSetRef
                  def="HOCoverageInputSet(coveragePattern, holine, openForEdit)"
                  mode="coveragePattern.CodeIdentifier"/>
              </InputIterator>
            </InputColumn>
          </DetailViewPanel>
        </PanelRef>
        <PanelRef
          id="HOSLAddtionalCovPanel">
          <TitleBar
            title="holine.Pattern.getCoverageCategory(covCategoryHOSLAdditional).DisplayName"
            visible="coveragePatternsExistForHOLine(covCategoryHOSLAdditional)"/>
          <DetailViewPanel>
            <Variable
              initialValue="holine.Pattern.getCoverageCategory(covCategoryHOSLAdditional).coveragePatternsForEntity(entity.HomeownersLine_HOE).where(\ coveragePattern -&gt; holine.isCoverageAvailable(coveragePattern))"
              name="hoSLAddlCoveragePatterns"
              recalculateOnRefresh="true"
              type="gw.api.productmodel.CoveragePattern[]"/>
            <InputColumn
              labelWidth="250">
              <InputIterator
                elementName="coveragePattern"
                forceRefreshDespiteChangedEntries="true"
                id="coveragePatternHOSL"
                value="hoSLAddlCoveragePatterns">
                <IteratorSort
                  sortBy="coveragePattern"
                  sortOrder="1"/>
                <InputSetRef
                  def="HOCoverageInputSet(coveragePattern, holine, openForEdit)"
                  mode="coveragePattern.CodeIdentifier"/>
              </InputIterator>
            </InputColumn>
          </DetailViewPanel>
        </PanelRef>
      </PanelColumn>
    </PanelRow>
    <Code><![CDATA[//Checks if there are coverage patterns for the category for the homeowners line under the coverage category.
//The check is performed at the availability level
function coveragePatternsExistForHOLine (covCategory : String) : Boolean {
  var covPatterns = holine.Pattern.getCoverageCategory(covCategory).coveragePatternsForEntity(entity.HomeownersLine_HOE)
  return covPatterns.hasMatch(\ cov -> holine.isCoverageAvailable(cov))
}

//Checks if there are coverage patterns for the category for the homeowners line under the coverage category.
//The check is performed at the availability level
function coveragePatternsExistForDwelling (covCategory : String) : Boolean {
  var covPatterns = holine.Pattern.getCoverageCategory(covCategory).coveragePatternsForEntity(entity.Dwelling_HOE)
  return covPatterns.hasMatch(\ cov -> dwelling.isCoverageAvailable(cov))
}

/* get coverages for Section II */
function retrieveSectionIICoverages() : gw.api.productmodel.CoveragePattern[] {
  var hoLineCovPatterns = holine.Pattern
        .getCoverageCategory(covCategorySectionII)
        .coveragePatternsForEntity(HomeownersLine_HOE)
        .where(\ coveragePattern -> holine.isCoverageAvailable(coveragePattern))
  var hoDwellingCovPatterns = holine.Pattern
        .getCoverageCategory(covCategoryDPDWLiability)
        .coveragePatternsForEntity(HomeownersLine_HOE)
        .where(\ coveragePattern -> holine.isCoverageAvailable(coveragePattern))
  return hoLineCovPatterns.concat(hoDwellingCovPatterns)
}]]></Code>
  </PanelSet>
</PCF>