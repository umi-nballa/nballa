<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../../pcf.xsd">
  <Popup
    afterEnter="cpBuilding = gw.web.line.cp.policy.CPBuildingPopupUIHelper.initialize(jobWizardHelper, building, cpBuilding, cpLocation, openForEdit);if (cpBuilding &lt;&gt; null &amp;&amp; !openForEdit) cpLocation = cpBuilding.CPLocation;una.productmodel.CPAutoPopulateUtil.setCoveragesFromDefaultScreen(cpLine,cpBuilding);cpBuilding.ClassCode=gw.web.line.cp.policy.CPBuildingPopupUIHelper.findFirstMatchingClassCode(cpBuilding, una.config.CPBuildingUtil.getClassCode(cpBuilding));cpBuilding.RateType=typekey.RateType.TC_CLASS//;una.config.CPBuildingUtil.setClassCode(cpBuilding) "
    beforeCommit="gw.lob.cp.CPBuildingValidation.validateBuilding(cpBuilding)"
    canEdit="openForEdit"
    countsAsWork="false"
    id="CPBuildingPopup"
    startInEditMode="openForEdit"
    title="return cpBuilding == null ? displaykey.CommercialProperty.Building.NewBuilding : cpBuilding.DisplayName">
    <LocationEntryPoint
      signature="CPBuildingPopup(cpLine : CommercialPropertyLine, cpBuilding : CPBuilding, openForEdit : boolean, jobWizardHelper : web.job.JobWizardHelper)"/>
    <LocationEntryPoint
      signature="CPBuildingPopup(cpLine : CommercialPropertyLine, cpLocation : CPLocation, openForEdit : boolean, jobWizardHelper : web.job.JobWizardHelper)"/>
    <LocationEntryPoint
      signature="CPBuildingPopup(cpLine : CommercialPropertyLine, cpLocation : CPLocation, building : Building, openForEdit : boolean, jobWizardHelper : web.job.JobWizardHelper)"/>
    <Variable
      name="cpLine"
      type="CommercialPropertyLine"/>
    <Variable
      name="cpBuilding"
      type="CPBuilding"/>
    <Variable
      name="cpLocation"
      type="CPLocation"/>
    <Variable
      name="building"
      type="Building"/>
    <Variable
      name="openForEdit"
      type="boolean"/>
    <Variable
      name="jobWizardHelper"
      type="web.job.JobWizardHelper"/>
    <Variable
      initialValue="cpBuilding.Building.BuildingAlarmType &lt;&gt; null"
      name="showAlarmFields"
      type="boolean"/>
    <Variable
      initialValue="true"
      name="showResidentialQues"
      type="boolean"/>
    <Screen>
      <Toolbar>
        <EditButtons/>
      </Toolbar>
      <PanelRef
        def="PreferredCoverageCurrencyPanelSet(cpBuilding, openForEdit, jobWizardHelper)"
        id="PreferredCoverageCurrencySelectorRef"/>
      <CardViewPanel>
        <Card
          id="BuildingDetails"
          title="displaykey.Web.Policy.LocationContainer.Location.Building.Details">
          <DetailViewPanel
            id="DetailsDV">
            <!-- Left column -->
            <InputColumn>
              <Label
                label="displaykey.Web.Policy.CP.Location.CPBuilding.BuildingInfo"/>
              <RangeInput
                editable="cpLocation == null"
                id="BuildingLocation"
                label="displaykey.Web.Policy.LocationContainer.Location"
                value="cpBuilding.CPLocation"
                valueRange="cpLine.CPLocations">
                <PostOnChange
                  onChange="cpLocation.Location.resetBuildingAutoNumberSequence()"
                  target="BuildingNumber"/>
              </RangeInput>
              <TextInput
                id="BuildingNumber"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.Number"
                value="cpBuilding.Building.BuildingNum"/>
              <TextInput
                editable="true"
                id="Description"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.Description"
                value="cpBuilding.Building.Description"/>
              <PickerInput
                editable="true"
                id="ClassCode"
                inputConversion="gw.web.line.cp.policy.CPBuildingPopupUIHelper.findFirstMatchingClassCode(cpBuilding, una.config.CPBuildingUtil.getClassCode(cpBuilding))//VALUE)"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.ClassCode"
                outputConversion="VALUE == null ? &quot;&quot; : VALUE.Code"
                pickLocation="CPClassCodeSearchPopup.push(cpLine, cpBuilding)"
                required="true"
                value="cpBuilding.ClassCode">
                <PostOnChange
                  target="ClassDescription"/>
              </PickerInput>
              <!-- <TextInput
                editable="true"
                id="ClassCode"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.ClassCode"
                value="cpBuilding.ClassCode"/> -->
              <TextAreaInput
                id="ClassDescription"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.ClassDescription"
                numCols="40"
                numRows="2"
                value="cpBuilding.ClassCode.Classification"/>
              <TypeKeyInput
                editable="true"
                id="OccupancyType"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.OccupancyType"
                required="true"
                value="cpBuilding.OccupancyType">
                <PostOnChange
                  onChange="if (openForEdit) { gw.web.productmodel.ProductModelSyncIssuesHandler.syncCoverages({cpBuilding}, jobWizardHelper) };una.config.CPBuildingUtil.setResDefaults(cpBuilding)"/>
              </TypeKeyInput>
              <TypeKeyInput
                id="CoverageForm"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.CoverageForm"
                value="cpBuilding.CoverageForm">
                <PostOnChange
                  onChange="if (openForEdit) { gw.web.productmodel.ProductModelSyncIssuesHandler.syncCoverages({cpBuilding}, jobWizardHelper) }"/>
              </TypeKeyInput>
              <InputDivider/>
              <Label
                label="displaykey.Web.Policy.CP.Location.CPBuilding.Rating"/>
              <!-- <TypeKeyInput
                id="RateType"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.RateType"
                value="cpBuilding.RateType"/> -->
              <TextInput
                align="left"
                formatType="exactNumber"
                id="RateType"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.RateType"
                maxChars="4"
                required="true"
                validationExpression="cpBuilding.validateYearBuilt(cpBuilding.Building.YearBuilt)"
                value="cpBuilding.RateType"/>
              <InputDivider/>
              <TextInput
                align="left"
                editable="true"
                formatType="exactNumber"
                id="YearBuilt"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.YearBuilt"
                maxChars="4"
                validationExpression="cpBuilding.validateYearBuilt(cpBuilding.Building.YearBuilt)"
                value="cpBuilding.Building.YearBuilt"/>
              <Label
                label="displaykey.Web.Policy.CP.Location.CPBuilding.Construction"/>
              <TextInput
                align="left"
                editable="true"
                id="NumStories"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.NumStories"
                value="cpBuilding.Building.NumStories">
                <PostOnChange
                  onChange="cpBuilding.BldgHt=cpBuilding.Building.NumStories*10"/>
              </TextInput>
              <TextInput
                align="left"
                editable="true"
                id="NumUnits"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.NumUnits"
                value="cpBuilding.Building.NumUnits">
                <PostOnChange
                  onChange="cpBuilding.ClassCode=gw.web.line.cp.policy.CPBuildingPopupUIHelper.findFirstMatchingClassCode(cpBuilding, una.config.CPBuildingUtil.getClassCode(cpBuilding))"/>
              </TextInput>
              <TextInput
                align="left"
                editable="true"
                id="fireprotclass"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.FireProtClass"
                required="true"
                value="cpBuilding.fireprotectionclass"/>
              <TextInput
                align="left"
                editable="true"
                id="bceg"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.Bceg"
                required="true"
                value="cpBuilding.bceg"/>
              <TypeKeyInput
                editable="true"
                id="ConstructionType"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.ConstructionType"
                value="cpBuilding.Building.ConstructionType"/>
              <!-- <TextInput
                align="left"
                editable="true"
                id="NumBasements"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.NumBasements"
                value="cpBuilding.Building.NumBasements"/> -->
              <TextInput
                align="left"
                editable="true"
                id="TotalArea"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.TotalArea"
                required="true"
                value="cpBuilding.SqFootExt"/>
              <!-- <TextInput
                align="left"
                editable="true"
                id="BasementArea"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.BasementArea"
                validationExpression="cpBuilding.validateBasementArea(cpBuilding.Building.BasementArea)"
                value="cpBuilding.Building.BasementArea"/> -->
              <!-- <TypeKeyInput
                editable="true"
                id="PercentSprinklered"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.Sprinklered"
                value="cpBuilding.Building.SprinklerCoverage"/> -->
              <TypeKeyInput
                editable="true"
                id="RoofType"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.RoofType"
                value="cpBuilding.RoofTypeCP "/>
              <TypeKeyInput
                editable="true"
                id="RoofShape"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.RoofShape"
                required="true"
                value="cpBuilding.RoofShape">
                <PostOnChange/>
              </TypeKeyInput>
              <TextAreaInput
                align="left"
                editable="true"
                id="roofothdes"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.RoofShapeOthDes"
                required="true"
                value="cpBuilding.RoofShapeOtherDes"/>
              <TypeKeyInput
                editable="true"
                id="FlatRoofDesc"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.FlatRoofDesc"
                required="cpBuilding.RoofShape==typekey.CPRoofShape_Ext.TC_FLAT"
                value="cpBuilding.FlatRoofDesc"
                visible="cpBuilding.RoofShape==typekey.CPRoofShape_Ext.TC_FLAT"/>
              <BooleanRadioInput
                editable="true"
                id="Sprinklered"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.Sprinklered"
                value="cpBuilding.Building.Sprinklered">
                <PostOnChange
                  onChange="//cpBuilding.Building.HeatingBoilerElsewhere = gw.web.line.cp.policy.CPBuildingPopupUIHelper.getBoilerInsuredValue(cpBuilding, cpBuilding.Building.HeatingBoilerOnPremises)"/>
              </BooleanRadioInput>
              <!-- <TypeKeyInput
                editable="true"
                id="WindRating"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.WindRating"
                value="cpBuilding.Building.WindRating"/> -->
              <!-- <BooleanRadioInput
                available="cpBuilding.Building.HeatingBoilerOnPremises"
                editable="true"
                id="HeatingBoilerElsewhere"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.BoilerInsuredElsewhere"
                value="cpBuilding.Building.HeatingBoilerElsewhere"/> -->
              <!-- <TextInput
                editable="true"
                id="FrontExposure"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.Front"
                value="cpBuilding.Building.FrontSide.Description"/> -->
              <!-- <TextInput
                editable="true"
                id="RightExposure"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.Right"
                value="cpBuilding.Building.RightSide.Description"/> -->
              <!-- <TextInput
                editable="true"
                id="LeftExposure"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.Left"
                value="cpBuilding.Building.LeftSide.Description"/> -->
              <!-- <TextInput
                editable="true"
                id="RearExposure"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.Rear"
                value="cpBuilding.Building.RearSide.Description"/> -->
              <TextInput
                align="left"
                editable="true"
                id="TimesRented"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.TimesRented"
                required="true"
                value="cpBuilding.Building.TimesRented"/>
              <InputGroup
                childrenVisible="showResidentialQues"
                id="ResQuesInputGroup"
                label="&quot;Residential Questions&quot;"
                visible="cpBuilding.OccupancyType==typekey.CPOccupancyType_Ext.TC_RESIDENTIAL">
                <BooleanRadioInput
                  editable="true"
                  id="statewindstorm"
                  label="displaykey.Web.Policy.CP.Location.CPBuilding.StateWindstorm"
                  required="false"
                  value="cpBuilding.ResQuestions.windstorm">
                  <PostOnChange
                    onChange="cpBuilding.ResQuestions.windstormexcl=cpBuilding.ResQuestions.windstorm"/>
                </BooleanRadioInput>
                <BooleanRadioInput
                  editable="true"
                  id="windexclusion"
                  label="displaykey.Web.Policy.CP.Location.CPBuilding.WindExclusions"
                  required="true"
                  value="cpBuilding.ResQuestions.windstormexcl">
                  <PostOnChange/>
                </BooleanRadioInput>
                <BooleanRadioInput
                  editable="true"
                  id="windexclusion5"
                  label="displaykey.Web.Policy.CP.Location.CPBuilding.Wind5Years"
                  required="cpBuilding.ResQuestions.windstormexcl==false"
                  value="cpBuilding.ResQuestions.windmiti5"
                  visible="cpBuilding.ResQuestions.windstormexcl==false">
                  <PostOnChange/>
                </BooleanRadioInput>
                <TypeKeyInput
                  align="left"
                  editable="true"
                  id="desexp"
                  label="displaykey.Web.Policy.CP.Location.CPBuilding.DesExp"
                  required="cpBuilding.ResQuestions.windstormexcl==false &amp;&amp; cpBuilding.ResQuestions.windmiti5==true &amp;&amp; cpBuilding.Building.YearBuilt&lt;2002 &amp;&amp; cpBuilding.Building.NumStories&gt;6//una.config.CPBuildingUtil.isVisible(cpBuilding)"
                  value="cpBuilding.ResQuestions.desgr3"
                  visible="cpBuilding.ResQuestions.windstormexcl==false &amp;&amp; cpBuilding.ResQuestions.windmiti5==true &amp;&amp; cpBuilding.Building.YearBuilt&lt;2002 &amp;&amp; cpBuilding.Building.NumStories&gt;6//una.config.CPBuildingUtil.isVisible(cpBuilding)"/>
                <TypeKeyInput
                  align="left"
                  editable="(cpBuilding.Building?.YearBuilt&gt;=2002 &amp;&amp; cpBuilding.ResQuestions?.windmiti5==true) || cpBuilding.Building?.YearBuilt&lt;2002"
                  id="gust"
                  label="displaykey.Web.Policy.CP.Location.CPBuilding.Gustwind"
                  required="cpBuilding.ResQuestions.windstormexcl==false || (cpBuilding.Building.YearBuilt&lt;2002 &amp;&amp; cpBuilding.ResQuestions.windmiti5==true &amp;&amp; cpBuilding.Building.NumStories&gt;=4)  //una.config.CPBuildingUtil.isVisible(cpBuilding)"
                  value="cpBuilding.ResQuestions.guswind"
                  visible="cpBuilding.ResQuestions.windstormexcl==false || (cpBuilding.Building.YearBuilt&lt;2002 &amp;&amp; cpBuilding.ResQuestions.windmiti5==true &amp;&amp; cpBuilding.Building.NumStories&gt;=4)  //una.config.CPBuildingUtil.isVisible(cpBuilding)">
                  <PostOnChange/>
                </TypeKeyInput>
                <TypeKeyInput
                  align="left"
                  editable="cpBuilding.ResQuestions.windmiti5==true"
                  id="gustloc"
                  label="displaykey.Web.Policy.CP.Location.CPBuilding.Gustwindloc"
                  required="cpBuilding.ResQuestions.windstormexcl==false &amp;&amp; cpBuilding.Building.YearBuilt&gt;=2002"
                  value="cpBuilding.ResQuestions.guswindloc"
                  visible="cpBuilding.ResQuestions.windstormexcl==false &amp;&amp; cpBuilding.Building.YearBuilt&gt;=2002"/>
                <TypeKeyInput
                  align="left"
                  editable="cpBuilding.ResQuestions.windmiti5==true"
                  id="intprdes"
                  label="displaykey.Web.Policy.CP.Location.CPBuilding.Intpres"
                  required="cpBuilding.ResQuestions.windstormexcl==false &amp;&amp; cpBuilding.Building.YearBuilt&gt;=2002 &amp;&amp; (cpBuilding.Building.NumStories==1 || cpBuilding.Building.NumStories==2 || cpBuilding.Building.NumStories==3) "
                  value="cpBuilding.ResQuestions.intpredes"
                  visible="cpBuilding.ResQuestions.windstormexcl==false &amp;&amp; cpBuilding.Building.YearBuilt&gt;=2002 &amp;&amp; (cpBuilding.Building.NumStories==1 || cpBuilding.Building.NumStories==2 || cpBuilding.Building.NumStories==3) "/>
                <TypeKeyInput
                  align="left"
                  editable="cpBuilding.ResQuestions.windmiti5==true"
                  id="openprot"
                  label="displaykey.Web.Policy.CP.Location.CPBuilding.OpenProt"
                  required="cpBuilding.ResQuestions.windstormexcl==false &amp;&amp; (cpBuilding.Building.YearBuilt&lt;2002 &amp;&amp; cpBuilding.ResQuestions.windmiti5==true)//una.config.CPBuildingUtil.isVisible(cpBuilding)"
                  value="cpBuilding.ResQuestions.openprt"
                  visible="cpBuilding.ResQuestions.windstormexcl==false &amp;&amp; (cpBuilding.Building.YearBuilt&lt;2002 &amp;&amp; cpBuilding.ResQuestions.windmiti5==true)//una.config.CPBuildingUtil.isVisible(cpBuilding)"/>
                <TypeKeyInput
                  align="left"
                  editable="true"
                  id="roofcov"
                  label="displaykey.Web.Policy.CP.Location.CPBuilding.Roofcover"
                  required="cpBuilding.ResQuestions.windstormexcl==false &amp;&amp; cpBuilding.ResQuestions.windmiti5==true &amp;&amp; cpBuilding.Building.YearBuilt&lt;2002"
                  value="cpBuilding.ResQuestions.roofcv"
                  visible="cpBuilding.ResQuestions.windstormexcl==false &amp;&amp; cpBuilding.ResQuestions.windmiti5==true &amp;&amp; cpBuilding.Building.YearBuilt&lt;2002"/>
                <TypeKeyInput
                  align="left"
                  editable="true"
                  id="rda"
                  label="displaykey.Web.Policy.CP.Location.CPBuilding.RoofDeckProt"
                  required="cpBuilding.ResQuestions.windstormexcl==false &amp;&amp; cpBuilding.ResQuestions.windmiti5==true &amp;&amp; cpBuilding.Building.YearBuilt&lt;2002 &amp;&amp; cpBuilding.Building.NumStories&lt;=3//una.config.CPBuildingUtil.isVisible(cpBuilding)"
                  value="cpBuilding.ResQuestions.roofdecat"
                  visible="cpBuilding.ResQuestions.windstormexcl==false &amp;&amp; cpBuilding.ResQuestions.windmiti5==true &amp;&amp; cpBuilding.Building.YearBuilt&lt;2002 &amp;&amp; cpBuilding.Building.NumStories&lt;=3//una.config.CPBuildingUtil.isVisible(cpBuilding)"/>
                <TypeKeyInput
                  align="left"
                  editable="cpBuilding.ResQuestions.windmiti5==true || cpBuilding.Building.YearBuilt&lt;=2002"
                  id="rd"
                  label="displaykey.Web.Policy.CP.Location.CPBuilding.Roofdeck"
                  required="cpBuilding.ResQuestions.windstormexcl==false || (cpBuilding.Building.YearBuilt&lt;2002 &amp;&amp; cpBuilding.ResQuestions.windmiti5==true)  //una.config.CPBuildingUtil.isVisible(cpBuilding)"
                  value="cpBuilding.ResQuestions.roofdk"
                  visible="cpBuilding.ResQuestions.windstormexcl==false || (cpBuilding.Building.YearBuilt&lt;2002 &amp;&amp; cpBuilding.ResQuestions.windmiti5==true)  //una.config.CPBuildingUtil.isVisible(cpBuilding)"/>
                <TypeKeyInput
                  align="left"
                  editable="true"
                  id="rwa"
                  label="displaykey.Web.Policy.CP.Location.CPBuilding.Roofwall"
                  required="cpBuilding.ResQuestions.windstormexcl==false &amp;&amp; cpBuilding.ResQuestions.windmiti5==true &amp;&amp; cpBuilding.Building.YearBuilt&lt;2002 &amp;&amp; cpBuilding.Building.NumStories&lt;=3//una.config.CPBuildingUtil.isVisible(cpBuilding)"
                  value="cpBuilding.ResQuestions.roofwl"
                  visible="cpBuilding.ResQuestions.windstormexcl==false &amp;&amp; cpBuilding.ResQuestions.windmiti5==true &amp;&amp; cpBuilding.Building.YearBuilt&lt;2002 &amp;&amp; cpBuilding.Building.NumStories&lt;=3//una.config.CPBuildingUtil.isVisible(cpBuilding)"/>
                <TypeKeyInput
                  align="left"
                  editable="cpBuilding.ResQuestions.windmiti5==true"
                  id="swr"
                  label="displaykey.Web.Policy.CP.Location.CPBuilding.Swr"
                  required="cpBuilding.ResQuestions.windstormexcl==false//una.config.CPBuildingUtil.isVisible(cpBuilding)"
                  value="cpBuilding.ResQuestions.swrr"
                  visible="cpBuilding.ResQuestions.windstormexcl==false//una.config.CPBuildingUtil.isVisible(cpBuilding)"/>
                <TypeKeyInput
                  align="left"
                  editable="true"
                  id="ter"
                  label="displaykey.Web.Policy.CP.Location.CPBuilding.Terrainexp"
                  required="cpBuilding.ResQuestions.windstormexcl==false &amp;&amp; cpBuilding.ResQuestions.windmiti5!=false//una.config.CPBuildingUtil.isVisible(cpBuilding)"
                  value="cpBuilding.ResQuestions.terexp"
                  visible="cpBuilding.ResQuestions.windstormexcl==false &amp;&amp; cpBuilding.ResQuestions.windmiti5!=false//una.config.CPBuildingUtil.isVisible(cpBuilding)"/>
                <TextInput
                  align="left"
                  editable="cpBuilding.ResQuestions.windmiti5==true"
                  id="wdbr"
                  label="displaykey.Web.Policy.CP.Location.CPBuilding.Wbdr"
                  required="cpBuilding.ResQuestions.windstormexcl==false &amp;&amp; cpBuilding.Building.YearBuilt&gt;=2002//una.config.CPBuildingUtil.isVisible(cpBuilding)"
                  value="cpBuilding.ResQuestions.wbdr"
                  visible="cpBuilding.ResQuestions.windstormexcl==false &amp;&amp; cpBuilding.Building.YearBuilt&gt;=2002//una.config.CPBuildingUtil.isVisible(cpBuilding)"/>
                <DateInput
                  align="left"
                  editable="true"
                  id="winddate"
                  label="displaykey.Web.Policy.CP.Location.CPBuilding.WindDate"
                  value="cpBuilding.ResQuestions.windmitidate"
                  visible="cpBuilding.ResQuestions.windmiti5==true"/>
              </InputGroup>
            </InputColumn>
            <!-- InputColumn
              labelWidth="300">
            </InputColumn Right column -->
            <InputColumn>
              <Label
                label="displaykey.Web.Policy.CP.Location.CPBuilding.BurglarySafeguard"/>
              <!-- <TypeKeyInput
                editable="true"
                id="BurglarySafeguard"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.BurglarySafeguard"
                value="cpBuilding.Building.BurglarySafeguard"/> -->
              <CheckBoxInput
                align="center"
                editable="true"
                id="activemonitoringvideo"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.ActiveMonitoring"
                required="false"
                value="cpBuilding.ProtectionDetails.ActiveMonitoringVideo"/>
              <CheckBoxInput
                align="center"
                editable="true"
                id="automaticfire"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.AutomaticFireSupp"
                required="false"
                value="cpBuilding.ProtectionDetails.AutomaticFireSuppress"/>
              <CheckBoxInput
                align="left"
                editable="true"
                id="centralburglar"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.CentralBurglarAlarm"
                required="false"
                value="cpBuilding.ProtectionDetails.CentralBurglarAlarm"/>
              <CheckBoxInput
                editable="true"
                id="centralfire"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.CentralFireAlarm"
                required="false"
                value="cpBuilding.ProtectionDetails.CentralFireAlarm"/>
              <CheckBoxInput
                editable="true"
                id="continuousvideo"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.ContinuousVideo"
                required="false"
                value="cpBuilding.ProtectionDetails.ContinuousRecVideo"/>
              <CheckBoxInput
                editable="true"
                id="exteriormotion"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.ExteriorMotion"
                required="false"
                value="cpBuilding.ProtectionDetails.ExteriorMotionLighting"/>
              <CheckBoxInput
                editable="true"
                id="gatedaccess"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.GatedAccess"
                required="false"
                value="cpBuilding.ProtectionDetails.GatedAccess"/>
              <CheckBoxInput
                editable="true"
                id="guarddogs"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.GuardDogs"
                required="false"
                value="cpBuilding.ProtectionDetails.GuardDogs"/>
              <CheckBoxInput
                editable="true"
                id="guardwatch"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.GuardWatch"
                required="false"
                value="cpBuilding.ProtectionDetails.GuardWatchmen"/>
              <CheckBoxInput
                editable="true"
                id="localburglar"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.LocalBurglarAlarm"
                required="false"
                value="cpBuilding.ProtectionDetails.LocalBurglarAlarm"/>
              <CheckBoxInput
                editable="true"
                id="localfire"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.LocalFireAlarm"
                required="false"
                value="cpBuilding.ProtectionDetails.LocalFireAlarm"/>
              <CheckBoxInput
                editable="true"
                id="motionvideo"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.MotionVideoCameras"
                required="false"
                value="cpBuilding.ProtectionDetails.MotionActivatedVideo"/>
              <Label
                label="displaykey.Web.Policy.CP.Location.CPBuilding.ACBurglarySafeguard"/>
              <CheckBoxInput
                editable="true"
                id="caged"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.caged"
                required="false"
                value="cpBuilding.AirCondProt.caged"/>
              <CheckBoxInput
                editable="true"
                id="alarmed"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.alarmed"
                required="false"
                value="cpBuilding.AirCondProt.alarmed"/>
              <CheckBoxInput
                editable="true"
                id="monitored"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.monitored"
                required="false"
                value="cpBuilding.AirCondProt.monitored"/>
              <!-- <InputGroup
                allowToggle="true"
                childrenVisible="showAlarmFields"
                id="AlarmInfoInputGroup"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.HasAlarm"
                onToggle="if (VALUE) {showAlarmFields = true} else {gw.web.line.cp.policy.CPBuildingPopupUIHelper.clearAlarmFields(cpBuilding);showAlarmFields = false}">
                <TypeKeyInput
                  editable="true"
                  id="AlarmType"
                  label="displaykey.Web.Policy.CP.Location.CPBuilding.AlarmType"
                  value="cpBuilding.Building.BuildingAlarmType"/>
                <TypeKeyInput
                  editable="true"
                  id="AlarmGrade"
                  label="displaykey.Web.Policy.CP.Location.CPBuilding.AlarmGrade"
                  value="cpBuilding.Building.AlarmGrade"/>
                <TextInput
                  editable="true"
                  id="AlarmCertificate"
                  label="displaykey.Web.Policy.CP.Location.CPBuilding.AlarmCertificateNum"
                  value="cpBuilding.Building.AlarmCertificate"/>
                <DateInput
                  editable="true"
                  id="AlarmExpiration"
                  label="displaykey.Web.Policy.CP.Location.CPBuilding.AlarmExpiration"
                  value="cpBuilding.Building.AlarmExpiration"/>
                <TypeKeyInput
                  editable="true"
                  id="AlarmClass"
                  label="displaykey.Web.Policy.CP.Location.CPBuilding.AlarmClass"
                  value="cpBuilding.Building.AlarmClass"/>
              </InputGroup> -->
              <InputDivider/>
              <Label
                label="displaykey.Web.Policy.CP.Location.CPBuilding.Improvements"/>
              <TextInput
                align="left"
                editable="true"
                formatType="exactNumber"
                id="LastUpdateHeating"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.LastUpdateHeating"
                maxChars="4"
                validationExpression="cpBuilding.validateYearLastUpdate(cpBuilding.Building.Heating.YearAdded)"
                value="cpBuilding.Building.Heating.YearAdded"
                visible="cpBuilding!=null &amp;&amp; cpBuilding?.Building!=null &amp;&amp; cpBuilding?.Building?.YearBuilt!=null &amp;&amp; ((new java.util.Date().YearOfDate - cpBuilding?.Building?.YearBuilt) &gt;50)  &amp;&amp; cpBuilding?.OccupancyType==typekey.CPOccupancyType_Ext.TC_NONRESIDENTIAL &amp;&amp; cpBuilding?.CPBldgCov?.CPBldgCovLimitTerm?.Value?.doubleValue()&gt;150000"/>
              <TextInput
                align="left"
                editable="true"
                id="LastUpdatePlumbing"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.LastUpdatePlumbing"
                maxChars="4"
                validationExpression="cpBuilding.validateYearLastUpdate(cpBuilding.Building.Plumbing.YearAdded)"
                value="cpBuilding.Building.Plumbing.YearAdded"
                visible="cpBuilding!=null &amp;&amp; cpBuilding?.Building!=null &amp;&amp; cpBuilding?.Building?.YearBuilt!=null &amp;&amp; ((new java.util.Date().YearOfDate - cpBuilding?.Building?.YearBuilt) &gt;50)  &amp;&amp; cpBuilding?.OccupancyType==typekey.CPOccupancyType_Ext.TC_NONRESIDENTIAL &amp;&amp; cpBuilding?.CPBldgCov?.CPBldgCovLimitTerm?.Value?.doubleValue()&gt;150000"/>
              <TextInput
                align="left"
                editable="true"
                id="LastUpdateRoofing"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.LastUpdateRoofing"
                maxChars="4"
                validationExpression="cpBuilding.validateYearLastUpdate(cpBuilding.Building.Roofing.YearAdded)"
                value="cpBuilding.Building.Roofing.YearAdded"
                visible="cpBuilding!=null &amp;&amp; cpBuilding.Building!=null &amp;&amp; cpBuilding?.Building?.YearBuilt!=null &amp;&amp; (new java.util.Date().YearOfDate - cpBuilding?.Building?.YearBuilt &gt;20)  &amp;&amp; (cpBuilding?.Building?.RoofType==typekey.RoofType.TC_COMPOSITIONARCHITECTURALSHINGLE_EXT || cpBuilding?.Building?.RoofType==typekey.RoofType.TC_COMPOSITIONIMPACTRESISTSHINGLES_EXT)"/>
              <TextInput
                align="left"
                editable="true"
                id="LastUpdateWiring"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.LastUpdateWiring"
                maxChars="4"
                validationExpression="cpBuilding.validateYearLastUpdate(cpBuilding.Building.Wiring.YearAdded)"
                value="cpBuilding.Building.Wiring.YearAdded"
                visible="cpBuilding!=null &amp;&amp; cpBuilding?.Building!=null &amp;&amp; cpBuilding?.Building?.YearBuilt!=null &amp;&amp; ((new java.util.Date().YearOfDate - cpBuilding?.Building?.YearBuilt) &gt;50) &amp;&amp; cpBuilding?.OccupancyType==typekey.CPOccupancyType_Ext.TC_NONRESIDENTIAL &amp;&amp; cpBuilding?.CPBldgCov?.CPBldgCovLimitTerm?.Value?.doubleValue()&gt;150000"/>
              <InputDivider/>
              <Label
                label="displaykey.Web.Policy.CP.Location.CPBuilding.Other"/>
              <TypeKeyInput
                editable="true"
                id="InterestType"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.InterestType"
                value="cpBuilding.Building.InterestType"/>
              <TypeKeyInput
                align="left"
                editable="true"
                id="RentedOthers"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.RentedToOthers"
                value="cpBuilding.Building.RentedOthers"/>
              <TypeKeyInput
                align="left"
                editable="true"
                id="PercentVacant"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.Vacancy"
                value="cpBuilding.Building.PercentVacant"/>
              <InputDivider/>
              <TextInput
                align="left"
                editable="true"
                id="FireHyd"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.FireHyd"
                required="true"
                value="cpBuilding.DistFireHyd"/>
              <TextInput
                align="left"
                editable="true"
                id="FireStn"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.FireStn"
                required="true"
                value="cpBuilding.DistFireStn"/>
              <TextInput
                align="left"
                editable="true"
                id="RespFireDept"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.RespFireStn"
                required="true"
                value="cpBuilding.RespFireDept"/>
              <TextInput
                align="left"
                editable="true"
                id="DistBldg"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.DistanceBldg"
                required="true"
                value="cpBuilding.DistToNext"/>
              <TextInput
                align="left"
                id="BldgHt"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.BldgHt"
                required="true"
                value="cpBuilding.BldgHt"/>
              <Input
                editable="true"
                id="FireProtectionClass"
                label="displaykey.Web.Policy.PolicyLocation.FireProtectionClass"
                labelAbove="true"
                value="cpBuilding?.CPLocation?.Location?.FireProtectClass"/>
              <InputDivider/>
              <Label
                label="displaykey.Web.Policy.CP.Location.CPBuilding.Rec"/>
              <TypeKeyInput
                align="left"
                editable="true"
                id="numpg"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.Numpg"
                value="cpBuilding.numpg"
                visible="true"/>
              <TypeKeyInput
                align="left"
                editable="true"
                id="numsw"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.Numsw"
                value="cpBuilding.numsw"/>
              <TypeKeyInput
                align="left"
                editable="true"
                id="numfit"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.Numfit"
                value="cpBuilding.numfit"/>
              <TypeKeyInput
                align="left"
                editable="true"
                id="numdock"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.Numbot"
                value="cpBuilding.numdocks"/>
              <TypeKeyInput
                align="left"
                editable="true"
                id="numot"
                label="displaykey.Web.Policy.CP.Location.CPBuilding.Numot"
                value="cpBuilding.numot"/>
            </InputColumn>
          </DetailViewPanel>
        </Card>
        <Card
          id="BuildingCoverages"
          title="displaykey.Web.Policy.CP.Location.CPBuilding.CoveragesCardTitle">
          <PanelRef>
            <PanelRow>
              <PanelColumn>
                <PanelRef
                  def="CPBldgSuggestedCovDV(cpBuilding, openForEdit)"/>
                <PanelRef
                  def="AdditionalLineTerCoveragesPanelSet(cpBuilding.PolicyLine as CommercialPropertyLine, new String[]{&quot;CPOptionalPropCovCategory_EXT&quot;}, true)"
                  editable="true"
                  id="cpoptionalcov"
                  visible="cpBuilding != null"/>
              </PanelColumn>
              <PanelColumn>
                <DetailViewPanel>
                  <InputColumn>
                    <Label
                      label="&quot;Additional Coverages&quot;"/>
                  </InputColumn>
                </DetailViewPanel>
                <PanelRef
                  def="AdditionalCoveragesPanelSet(cpBuilding, new String[]{&quot;CPContentsCategory&quot;,&quot;CPAdditionalPropCovCategory_EXT&quot;}, true)"
                  editable="true"
                  id="cpaddlcov"
                  visible="cpBuilding != null"/>
                <DetailViewPanel>
                  <InputColumn>
                    <Label
                      label="&quot;Optional Coverages&quot;"/>
                  </InputColumn>
                </DetailViewPanel>
                <PanelRef
                  def="AdditionalCoveragesPanelSet(cpBuilding, new String[]{&quot;CPOptionalPropCovCategory_EXT&quot;,&quot;CPOptionalSchedPropCovCategory_EXT&quot;}, true)"
                  editable="true"
                  id="cpoptcov"
                  visible="cpBuilding != null"/>
                <!-- <DetailViewPanel>
                  <InputColumn>
                    <Label
                      label="&quot;Line Level Coverages&quot;"/>
                  </InputColumn>
                </DetailViewPanel> -->
                <!-- <PanelRef
                  def="AdditionalLineCoveragesPanelSet(cpBuilding.PolicyLine as CommercialPropertyLine, new String[]{&quot;CPOptionalPropCovCategory_EXT&quot;}, true)"
                  editable="true"
                  id="cpoptionalcov"
                  visible="cpBuilding != null"/> -->
                <!-- <DetailViewPanel>
                  <InputColumn>
                    <Label
                      label="&quot;Optional Scheduled Coverages&quot;"/>
                  </InputColumn>
                </DetailViewPanel> -->
                <!-- <PanelRef
                  def="AdditionalLineCoveragesPanelSet(cpBuilding, new String[]{&quot;CPOptionalSchedPropCovCategory_EXT&quot;}, true)"
                  editable="true"
                  id="cpschedcov"
                  visible="cpBuilding != null"/> -->
              </PanelColumn>
            </PanelRow>
          </PanelRef>
        </Card>
        <Card
          id="BuildingExclusionsConditions"
          title="&quot;Exclusions and Conditions&quot;">
          <PanelRef
            def="AdditionalExclusionsAndConditionsPanelSet(cpLine, new String[]{&quot;CPExclusions_EXT&quot;,&quot;CPConditions_EXT&quot;} , true)"/>
        </Card>
        <Card
          id="BuildingAddlInterest"
          title="displaykey.CommercialProperty.Building.AdditionalInterest">
          <PanelRef
            def="AdditionalInterestDetailsDV(cpBuilding, openForEdit)"/>
        </Card>
      </CardViewPanel>
    </Screen>
    <Code><![CDATA[function setCoveragesFromDefaultScreen(cLine:CommercialPropertyLine, cBuilding:CPBuilding):void
{
  if(cLine.causeofloss!=null)
    cBuilding.CPBldgCov.CPBldgCovCauseOfLossTerm.Value = cLine.causeofloss

  if(cLine.allotherperilded!=null)
   cBuilding.CPBldgCov.CPBldgCovDeductibleTerm.OptionValue=cLine.allotherperilded.Code

  if(cLine.hurricanededtype!=null)
    cBuilding.CPBldgCov.CPBldgCovHurricaneDedType_EXTTerm.OptionValue=cLine.hurricanededtype.Code

  if(cLine.hurricanepercded!=null)
    cBuilding.CPBldgCov.CPBldgCovHurricaneDeductible_EXTTerm.OptionValue=cLine.hurricanepercded.Code

  if(cLine.Inflationguard!=null)
    cBuilding.CPBldgCov.CPBldgCovAutoIncreaseTerm.OptionValue=cLine.Inflationguard.Code


  if(cLine.CPOrdinanceOrLawType!=null)
    cLine.AllCoverages.where( \ elt -> elt.PatternCode=="CPOrdinanceorLaw_EXT")?.first().CovTerms.where( \ elt -> elt.PatternCode=="CPOrdinanceorLawCoverage_EXT")?.first().setValueFromString(cLine.CPOrdinanceOrLawType.Code)

  if(cLine.CPCoverageB!=null)
    cLine.AllCoverages.where( \ elt -> elt.PatternCode=="CPOrdinanceorLaw_EXT")?.first().CovTerms.where( \ elt -> elt.PatternCode=="CPOrdinanceorLawCovB_Ext")?.first().setValueFromString(cLine.CPCoverageB.Code)

  if(cLine.CPCoverageC!=null)
    cLine.AllCoverages.where( \ elt -> elt.PatternCode=="CPOrdinanceorLaw_EXT")?.first().CovTerms.where( \ elt -> elt.PatternCode=="CPOrdinanceorLawCovC_Ext")?.first().setValueFromString(cLine.CPCoverageC.Code)

  //if(cLine.EquipmentBreakdownEnhancement!=null)
  //  cLine.AllCoverages.where( \ elt -> elt.PatternCode=="CPEquipmentBreakdownEnhance_EXT")?.first().
  
  
                   
   
  
}

function setCPClassCode():boolean
{
  return false
}]]></Code>
  </Popup>
</PCF>