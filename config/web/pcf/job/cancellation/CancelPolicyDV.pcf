<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <DetailViewPanel
    id="CancelPolicyDV">
    <Require
      name="cancellation"
      type="Cancellation"/>
    <Require
      name="jobWizardHelper"
      type="web.job.JobWizardHelper"/>
    <Variable
      initialValue="cancellation.PolicyPeriod"
      name="policyPeriod"/>
    <Variable
      initialValue="policyPeriod.EditEffectiveDate"
      name="effectiveDate"
      type="java.util.Date"/>
    <Variable
      initialValue="new una.pageprocess.cancellation.CancellationPCFController(policyPeriod.Cancellation, policyPeriod)"
      name="pcfController"/>
    <InputColumn>
      <TypeKeyInput
        id="Source"
        label="displaykey.Web.CancellationWizard.Source"
        value="cancellation.Source"/>
      <TypeKeyInput
        id="Reason"
        label="displaykey.Web.CancellationWizard.Reason"
        value="cancellation.CancelReasonCode">
        <PostOnChange
          onChange="effectiveDate = cancellation != null ? cancellation.getDefaultEffectiveDate(policyPeriod, pcfController.CancellationRefundMethod) : effectiveDate;cancellation.Description=cancellation.CancelReasonCode.Description; pcfController.onChangeReasonCode(cancellation.CancelReasonCode, effectiveDate)"/>
      </TypeKeyInput>
      <Label
        label="displaykey.una.cancellation.CancelReasonDetails"
        visible="pcfController.areCancelReasonDetailsVisible()"/>
      <ListViewInput
        labelAbove="true"
        visible="pcfController.areCancelReasonDetailsVisible()"
        width="50%">
        <Toolbar>
          <IteratorButtons
            iterator="CRDetail"
            showAddConfirmMessage="false"
            showRemoveConfirmMessage="false"/>
        </Toolbar>
        <ListViewPanel
          id="CancelReasonDetailLV">
          <RowIterator
            autoAdd="cancellation.CancelReasonDetails.Count == 0 "
            editable="true"
            elementName="cancelReasonDetail"
            hasCheckBoxes="true"
            hideCheckBoxesIfReadOnly="true"
            id="CRDetail"
            toAdd="cancellation.addToCancelReasonDetails(cancelReasonDetail)"
            toRemove="cancellation.removeFromCancelReasonDetails(cancelReasonDetail)"
            value="cancellation.CancelReasonDetails">
            <Row>
              <RangeCell
                editable="true"
                id="ReasonDetailCode"
                label="displaykey.una.cancellation.reasondetailcode"
                required="true"
                value="cancelReasonDetail.Code"
                valueRange="pcfController.ReasonDetailRange">
                <PostOnChange
                  onChange="pcfController.onChangeReasonDetailCode(cancelReasonDetail)"/>
              </RangeCell>
              <TextCell
                editable="true"
                id="description"
                label="displaykey.una.cancellation.ReasonDetailDescription"
                required="true"
                value="cancelReasonDetail.Description">
                <PostOnChange/>
              </TextCell>
            </Row>
          </RowIterator>
        </ListViewPanel>
      </ListViewInput>
      <TextAreaInput
        align="center"
        boldValue="true"
        editable="pcfController.isReasonDescriptionEditable()"
        id="CumulativeDescription"
        label="displaykey.Web.CancellationWizard.ReasonDescription"
        maxChars="811"
        numCols="65"
        numRows="8"
        value="pcfController.CumulativeReasonDetailsDescription"/>
      <!-- <TextAreaInput
        editable="true"
        id="ReasonDescription"
        label="displaykey.Web.CancellationWizard.ReasonDescription"
        numCols="40"
        numRows="6"
        value="cancellation.Description"/> -->
      <TypeKeyInput
        id="CalcMethod"
        label="displaykey.Web.CancellationWizard.CalcMethod"
        value="pcfController.CancellationRefundMethod"/>
      <DateInput
        editable="cancellation.canEditEffectiveDate(policyPeriod)"
        id="CancelDate"
        label="displaykey.Web.CancellationWizard.CancelDate"
        required="true"
        validationExpression="cancellation.validateEffectiveDate(policyPeriod, effectiveDate, policyPeriod.RefundCalcMethod)"
        value="effectiveDate">
        <PostOnChange
          onChange="if (effectiveDate != null) { applyCancellationDateChange() }; pcfController.onChangeCancelEffectiveDate(effectiveDate)"/>
      </DateInput>
      <DateTimeInput
        editable="true"
        id="MailDate"
        label="&quot;Cancellation Mail Date&quot;"
        onChange="pcfController.onChangeMailDate(cancellation.CancelLetterMailDate)"
        required="true"
        timeVisible="false"
        validationExpression="pcfController.validateMailDate()"
        value="pcfController.CancellationLetterMailDate"
        visible="cancellation.Source == TC_CARRIER"/>
      <Input
        id="NumberOfDaysNotice"
        label="displaykey.una.cancellation.NumberOfDaysNotice"
        required="false"
        value="pcfController.NumberOfDaysNotice"
        visible="cancellation.Source == TC_CARRIER"/>
      <CheckBoxInput
        editable="true"
        id="SuppressPrint"
        label="displaykey.una.cancellation.SupressPrint"
        required="false"
        value="cancellation.SupressPrint"/>
    </InputColumn>
    <Code><![CDATA[function applyCancellationDateChange() {
  try{
    policyPeriod.CancellationProcess.setCancellationDate(effectiveDate)
    jobWizardHelper.setPeriodToView(policyPeriod.getSlice(policyPeriod.EditEffectiveDate))
  } catch(e : java.lang.IllegalArgumentException) {
    var formatString = displaykey.Web.CancellationSetup.Error.DateFormatString
    var effDateStr = effectiveDate.format(formatString)
    gw.api.job.JobProcessLogger.logWarning("Failed to change cancellation date to ${effDateStr} for period \"${policyPeriod}\" because: ${e.Message}")
  }
}]]></Code>
  </DetailViewPanel>
</PCF>