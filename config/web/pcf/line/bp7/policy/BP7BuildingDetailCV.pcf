<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../../pcf.xsd">
  <CardViewPanel
    id="BP7BuildingDetailCV">
    <Require
      name="building"
      type="BP7Building"/>
    <Require
      name="openForEdit"
      type="boolean"/>
    <Require
      name="jobWizardHelper"
      type="web.job.JobWizardHelper"/>
    <Variable
      initialValue="building.Branch"
      name="policyPeriod"
      recalculateOnRefresh="true"
      type="PolicyPeriod"/>
    <Variable
      initialValue="building.Location"
      name="location"
      recalculateOnRefresh="true"
      type="BP7Location"/>
    <Variable
      initialValue="false"
      name="isLandscapeGarden"
      recalculateOnRefresh="true"
      type="boolean"/>
    <Card
      id="GeneralInfoCard"
      title="displaykey.Web.Policy.LocationContainer.Location.Building.Details">
      <PanelSet
        editable="openForEdit"
        id="BP7BuildingCoveragesPanelSet">
        <PanelRow>
          <PanelColumn
            width="50%">
            <PanelRef
              id="mandatory">
              <TitleBar
                title="displaykey.Web.Policy.BP7.Building.Building"/>
              <PanelSet/>
            </PanelRef>
            <DetailViewPanel
              editable="openForEdit">
              <InputColumn>
                <RangeInput
                  editable="gw.lob.bp7.utils.BP7UIDisplayUtil.rangeInputEditable(location, policyPeriod.BP7Line.BP7Locations?.toList())"
                  id="BuildingLocation"
                  label="displaykey.Web.Policy.LocationContainer.Location"
                  required="true"
                  value="location"
                  valueRange="policyPeriod.BP7Line.BP7Locations.sortBy(\ loc -&gt; loc.PolicyLocation.LocationNum)">
                  <PostOnChange
                    onChange="building.changeLocation(location, policyPeriod.Job.NewTerm); gw.api.web.PebblesUtil.invalidateIterators(CurrentLocation, BP7Building)"/>
                </RangeInput>
                <Input
                  editable="true"
                  id="Description"
                  label="displaykey.Web.Policy.BP7.Building.BuildingDescription"
                  value="building.Building.Description">
                  <PostOnChange/>
                </Input>
                <TypeKeyInput
                  editable="true"
                  id="PropertyType"
                  label="displaykey.Web.Policy.BP7.Building.PredominantOccupancyType"
                  value="building.BP7PredominantOccupancy">
                  <PostOnChange
                    onChange="building.updateDependentFields(null, jobWizardHelper)"/>
                </TypeKeyInput>
                <!-- <TypeKeyInput
                  editable="true"
                  id="EffectivenessGradeClass"
                  label="displaykey.Web.Policy.BP7.Building.EffectivenessGradeClass"
                  value="building.BldgCodeEffGradeClass">
                  <PostOnChange
                    onChange="building.updateDependentFields(null, jobWizardHelper)"/>
                </TypeKeyInput> -->
                <TypeKeyInput
                  editable="true"
                  id="PredominantOccupancyType"
                  label="displaykey.Web.Policy.BP7.Building.OccupancyType"
                  value="building.BP7OccupancyType">
                  <PostOnChange
                    onChange="building.updateDependentFields(null, jobWizardHelper)"/>
                </TypeKeyInput>
                <RangeInput
                  editable="gw.lob.bp7.utils.BP7UIDisplayUtil.rangeInputEditable(building.BldgCodeEffGrade, building.BldgCodeEffGradeValues)"
                  id="EffectivenessGrade"
                  label="displaykey.Web.Policy.BP7.Building.EffectivenessGrade"
                  optionLabel="VALUE.Description"
                  sortValueRange="false"
                  value="building.BldgCodeEffGrade"
                  valueRange="building.BldgCodeEffGradeValues.sortBy(\ grade -&gt; grade.Priority)"/>
                <TypeKeyInput
                  editable="true"
                  id="FireprotectionClass"
                  label="&quot;Fire Protection Class&quot;"
                  required="true"
                  value="location.FireProtectionClassPPC">
                  <PostOnChange
                    onChange="building.updateDependentFields(null, jobWizardHelper)"/>
                </TypeKeyInput>
                <Input
                  editable="true"
                  id="yearbuilt"
                  label="displaykey.Web.Policy.BP7.Building.Yearbuilt"
                  required="true"
                  value="building.YearBuilt">
                  <PostOnChange/>
                </Input>
                <Input
                  editable="true"
                  id="Storey"
                  label="displaykey.Web.Policy.BP7.Building.NoOFStorey"
                  required="true"
                  value="building.NoOfStories">
                  <PostOnChange/>
                </Input>
                <Input
                  editable="true"
                  id="units"
                  label="displaykey.Web.Policy.BP7.Building.NoOfUnits"
                  required="true"
                  value="building.NoOfUnits">
                  <PostOnChange/>
                </Input>
                <BooleanRadioInput
                  editable="true"
                  id="FireDepartment"
                  label="displaykey.Web.Policy.BP7.Building.FireDepartment"
                  required="false"
                  value="building.FireDepartmentDistance">
                  <PostOnChange
                    onChange="building.bp7sync(jobWizardHelper)"/>
                </BooleanRadioInput>
                <TypeKeyInput
                  editable="true"
                  id="ConstructionType"
                  label="displaykey.Web.Policy.BP7.Building.ConstructionType"
                  value="building.ConstructionType"/>
                <BooleanRadioInput
                  editable="true"
                  id="Sprinklered"
                  label="displaykey.Web.Policy.BP7.Building.Sprinklered"
                  value="building.Sprinklered">
                  <PostOnChange
                    onChange="building.bp7sync(jobWizardHelper)"/>
                </BooleanRadioInput>
                <BooleanRadioInput
                  editable="true"
                  id="CentralBurglarAlarm"
                  label="displaykey.Web.Policy.BP7.Building.CentralBurglarAlarm"
                  required="true"
                  value="building.CentralBurglarAlarm">
                  <PostOnChange
                    onChange="building.bp7sync(jobWizardHelper)"/>
                </BooleanRadioInput>
                <BooleanRadioInput
                  editable="true"
                  id="firealarm"
                  label="displaykey.Web.Policy.BP7.Building.CentralFireAlarmSystem"
                  required="true"
                  value="building.CentralFireAlarmSystem">
                  <PostOnChange
                    onChange="building.bp7sync(jobWizardHelper)"/>
                </BooleanRadioInput>
                <Label
                  id="airconditioning"
                  label="displaykey.Web.Policy.BP7.Building.AirConditioning"/>
                <BooleanRadioInput
                  editable="true"
                  id="caged"
                  label="displaykey.Web.Policy.BP7.Building.AirConditioning.caged"
                  value="building.caged">
                  <PostOnChange
                    onChange="building.bp7sync(jobWizardHelper)"/>
                </BooleanRadioInput>
                <BooleanRadioInput
                  editable="true"
                  id="alarmed"
                  label="displaykey.Web.Policy.BP7.Building.AirConditioning.alarmed"
                  value="building.Alarmed">
                  <PostOnChange
                    onChange="building.bp7sync(jobWizardHelper)"/>
                </BooleanRadioInput>
                <BooleanRadioInput
                  editable="true"
                  id="monitored"
                  label="displaykey.Web.Policy.BP7.Building.AirConditioning.monitored"
                  value="building.Monitored">
                  <PostOnChange
                    onChange="building.bp7sync(jobWizardHelper)"/>
                </BooleanRadioInput>
                <!-- <RangeInput
                  editable="gw.lob.bp7.utils.BP7UIDisplayUtil.rangeInputEditable(building.PctOwnerOccupied, building.PercentageOwnerOccupiedValues)"
                  id="PercentOwnerOccupied"
                  label="displaykey.Web.Policy.BP7.Building.PctOwnerOccupied"
                  value="building.PctOwnerOccupied"
                  valueRange="building.PercentageOwnerOccupiedValues">
                  <PostOnChange
                    onChange="building.updateDependentFields(null, jobWizardHelper)"/>
                </RangeInput> -->
                <Input
                  editable="true"
                  id="TotalCondominiumBuildingSquareFootage"
                  label="displaykey.Web.Policy.BP7.Building.TotalCondominiumBuildingSquareFootage"
                  required="true"
                  value="building.TotalCondoBldgSquareFo"
                  visible="building.TotalCondoBldgSquareFoVisible"/>
                <!-- <BooleanRadioInput
                  editable="true"
                  id="RABOPWanted"
                  label="displaykey.Web.Policy.BP7.Building.RABOPWanted"
                  value="building.RABOPWanted">
                  <PostOnChange
                    onChange="building.updateDependentFields(null, jobWizardHelper)"/>
                </BooleanRadioInput> -->
                <!-- <TypeKeyInput
                  editable="true"
                  id="RABOPType"
                  label="displaykey.Web.Policy.BP7.Building.RABOPType"
                  required="building.RABOPWanted"
                  value="building.RABOPType"/> -->
                <!-- <TypeKeyInput
                  editable="true"
                  id="RABOPTypeLiabilityLess"
                  label="displaykey.Web.Policy.BP7.Building.RABOPTypeLiabilityLess"
                  required="building.RABOPTypeLiabilityLessorsRequired"
                  value="building.RABOPTypeLiabilityLess"/> -->
              </InputColumn>
            </DetailViewPanel>
          </PanelColumn>
          <PanelColumn
            width="50%">
            <PanelRef
              def="BP7CoveragesDV(building, openForEdit, getCategories(gw.lob.bp7.BP7Categories.BP7BuildingStdGrp.Code), jobWizardHelper)"
              id="MandatoryCoverages">
              <TitleBar
                title="displaykey.Web.LineWizard.Coverages"/>
            </PanelRef>
          </PanelColumn>
        </PanelRow>
        <PanelRef
          id="ClassificationList">
          <Toolbar>
            <IteratorButtons
              addLabel="displaykey.Web.Policy.BP7.Classification.AddClassification"
              iterator="Classifications_LV"
              removeLabel="displaykey.Web.Policy.BP7.Classification.RemoveClassifications"/>
          </Toolbar>
          <ListDetailPanel
            id="ClassificationsListDetail"
            selectionName="selectedClassification"
            selectionType="BP7Classification">
            <PanelRef>
              <ListViewPanel
                id="Classifications_LV">
                <RowIterator
                  editable="true"
                  elementName="currentClassification"
                  hasCheckBoxes="true"
                  hideCheckBoxesIfReadOnly="true"
                  toCreateAndAdd="building.createAndAddClassification(jobWizardHelper)"
                  toRemove="building.removeClassification(currentClassification)"
                  validationLabel="displaykey.Web.Policy.BP7.Classification.Classification"
                  value="building.Classifications">
                  <IteratorSort
                    sortBy="currentClassification.ClassificationNumber"
                    sortOrder="1"/>
                  <Row>
                    <TextCell
                      align="left"
                      id="ClassificationNumber"
                      label="displaykey.Web.Policy.BP7.Classification.Number"
                      numCols="16"
                      value="currentClassification.ClassificationNumber"/>
                    <TextCell
                      align="left"
                      id="PropertyType"
                      label="displaykey.Web.Policy.BP7.Classification.ClassPropertyType"
                      numCols="16"
                      value="currentClassification.ClassPropertyType"/>
                    <TextCell
                      align="left"
                      id="ClassificationDescription"
                      label="displaykey.Web.Policy.BP7.Classification.ClassDescription"
                      numCols="16"
                      value="currentClassification.ClassDescription"/>
                    <TextCell
                      align="left"
                      id="Area"
                      label="displaykey.Web.Policy.BP7.Classification.Area"
                      numCols="16"
                      value="currentClassification.Area"/>
                    <Cell
                      action="BP7BlanketPopup.push(policyPeriod.BP7Line, currentClassification.AssociatedBlanket, openForEdit, jobWizardHelper)"
                      actionAvailable="currentClassification.AssociatedBlanket.BlanketNumber != null"
                      id="classificationBlanket"
                      label="displaykey.Web.Policy.BP7.Blanket.NumberShortened"
                      value="currentClassification.AssociatedBlanket.BlanketNumber"/>
                    <CheckBoxCell
                      confirmMessage="predominantConfirmationMessage(selectedClassification)"
                      editable="true"
                      id="PredominantOverride"
                      label="displaykey.Web.Policy.BP7.Classification.PredominantOverride"
                      showConfirmMessage="true"
                      value="currentClassification.PredominantOverride"
                      visible="building.Classifications.Count &gt; 1">
                      <PostOnChange
                        onChange="onChangeForPredominantOverride(currentClassification)"/>
                    </CheckBoxCell>
                  </Row>
                </RowIterator>
              </ListViewPanel>
            </PanelRef>
            <CardViewPanel>
              <Card
                id="GeneralInfoCard"
                title="displaykey.Web.Policy.BP7.Classification.Details">
                <PanelSet>
                  <PanelRow>
                    <PanelColumn
                      width="50%">
                      <PanelRef
                        id="mandatory">
                        <TitleBar
                          title="displaykey.Web.Policy.BP7.Classification.Classification"/>
                        <PanelSet>
                          <DetailViewPanel>
                            <Variable
                              initialValue="selectedClassification.ClassPropertyType"
                              name="previousPropertyTypeValue"
                              recalculateOnRefresh="true"
                              type="BP7ClassificationPropertyType"/>
                            <Variable
                              initialValue="selectedClassification.ClassDescription"
                              name="previousDescriptionValue"
                              recalculateOnRefresh="true"
                              type="typekey.BP7ClassDescription"/>
                            <InputColumn>
                              <TextInput
                                editable="gw.lob.bp7.utils.BP7UIDisplayUtil.rangeInputEditable(selectedClassification.ClassPropertyType, selectedClassification.ClassPropertyTypeValues)"
                                id="ClassPropertyType"
                                label="displaykey.Web.Policy.BP7.Classification.PredominantOccupancyType"
                                value="selectedClassification.Building.BP7PredominantOccupancy">
                                <PostOnChange/>
                              </TextInput>
                              <TextInput
                                editable="gw.lob.bp7.utils.BP7UIDisplayUtil.rangeInputEditable(selectedClassification.ClassPropertyType, selectedClassification.ClassPropertyTypeValues)"
                                id="OccupancyType"
                                label="displaykey.Web.Policy.BP7.Classification.OccupancyType"
                                value="selectedClassification.Building.BP7OccupancyType">
                                <PostOnChange
                                  onChange="selectedClassification.updateDependentFields(new gw.lob.common.dependency.DependenciesContext(BP7Classification#ClassPropertyType.PropertyInfo, previousPropertyTypeValue), jobWizardHelper)"/>
                              </TextInput>
                              <RangeInput
                                editable="gw.lob.bp7.utils.BP7UIDisplayUtil.rangeInputEditable(selectedClassification.ClassDescription, selectedClassification.ClassDescriptionValues)"
                                id="ClassDescription"
                                label="displaykey.Web.Policy.BP7.Classification.ClassDescription"
                                optionLabel="VALUE.Description"
                                value="selectedClassification.ClassDescription"
                                valueRange="selectedClassification.ClassDescriptionValues">
                                <PostOnChange
                                  onChange="selectedClassification.updateDependentFields(new gw.lob.common.dependency.DependenciesContext(BP7Classification#ClassDescription.PropertyInfo, previousDescriptionValue))"/>
                              </RangeInput>
                              <!-- <TextInput
                                id="classcode"
                                label="displaykey.Web.Policy.BP7.Classification.Classcode"
                                value="selectedClassification.ClassCode">
                                <PostOnChange
                                  onChange="selectedClassification.updateDependentFields(new gw.lob.common.dependency.DependenciesContext(BP7Classification#ClassPropertyType.PropertyInfo, previousPropertyTypeValue), jobWizardHelper)"/>
                              </TextInput> -->
                              <!-- <TypeKeyInput
                                id="ExposureBasis"
                                label="displaykey.Web.Policy.BP7.Classification.ExposureBasis"
                                value="selectedClassification.ExposureBasis"/> -->
                              <Input
                                editable="selectedClassification.ExposureBasis != null"
                                id="Exposure"
                                label="displaykey.Web.Policy.BP7.Classification.Exposure"
                                required="true"
                                value="selectedClassification.Exposure"
                                visible="selectedClassification.isExposureApplicable"/>
                              <!-- <Input
                                id="UneditableExposure"
                                label="displaykey.Web.Policy.BP7.Classification.Exposure"
                                value="displaykey.Web.Policy.BP7.Classification.ExposureNotApplicableMsg"
                                visible="not selectedClassification.isExposureApplicable"/> -->
                              <Input
                                editable="true"
                                id="Area"
                                label="displaykey.Web.Policy.BP7.Classification.ClassificationArea"
                                value="selectedClassification.Area">
                                <PostOnChange/>
                              </Input>
                              <Input
                                editable="true"
                                id="OccupiedArea"
                                label="displaykey.Web.Policy.BP7.Classification.VacantArea"
                                value="selectedClassification.VacantSquareFootage">
                                <PostOnChange/>
                              </Input>
                              <!-- <BooleanRadioInput
                                editable="true"
                                id="AmusementArea"
                                label="displaykey.Web.Policy.BP7.Classification.AmusementArea"
                                value="selectedClassification.AmusementArea"/> -->
                              <!-- <TypeKeyInput
                                editable="true"
                                id="Playground"
                                label="displaykey.Web.Policy.BP7.Classification.Playground"
                                value="selectedClassification.Playground"/> -->
                              <!-- <Input
                                editable="true"
                                id="NumSwimmingPools"
                                label="displaykey.Web.Policy.BP7.Classification.NumSwimmingPools"
                                value="selectedClassification.NumSwimmingPools"/> -->
                              <!-- <BooleanRadioInput
                                editable="true"
                                id="ClassificationRABOPWanted"
                                label="displaykey.Web.Policy.BP7.Classification.RABOPWanted"
                                value="selectedClassification.RABOPWanted">
                                <PostOnChange
                                  onChange="selectedClassification.updateDependentFields(null, jobWizardHelper)"/>
                              </BooleanRadioInput> -->
                              <!-- <TypeKeyInput
                                editable="true"
                                id="ClassificationRABOPType"
                                label="displaykey.Web.Policy.BP7.Classification.RABOPType"
                                required="selectedClassification.RABOPWanted"
                                value="selectedClassification.RABOPType"/> -->
                              <!-- <TypeKeyInput
                                editable="true"
                                id="ClassificationRABOPTypeLiabilityOccu"
                                label="displaykey.Web.Policy.BP7.Classification.RABOPTypeLiabilityOccu"
                                required="selectedClassification.RABOPTypeLiabilityOccupantsRequired"
                                value="selectedClassification.RABOPTypeLiabilityOccu"/> -->
                            </InputColumn>
                          </DetailViewPanel>
                        </PanelSet>
                      </PanelRef>
                    </PanelColumn>
                    <PanelColumn
                      width="50%">
                      <PanelRef
                        def="BP7CoveragesDV(selectedClassification, openForEdit, selectedClassification.StandardCoverages, jobWizardHelper)"
                        id="MandatoryCoverages">
                        <TitleBar
                          title="displaykey.Web.LineWizard.Coverages"/>
                      </PanelRef>
                      <PanelRef
                        def="BP7CoveragesDV(selectedClassification, openForEdit, selectedClassification.MotelCoverages, jobWizardHelper)"
                        id="MotelCoverages"
                        visible="selectedClassification.ClassPropertyType == BP7ClassificationPropertyType.TC_MOTEL">
                        <TitleBar
                          title="displaykey.Web.Policy.BP7.Classification.MotelGroup"/>
                      </PanelRef>
                      <PanelRef
                        def="BP7CoveragesDV(selectedClassification, openForEdit, selectedClassification.SelfStorageFacilitiesCoverages, jobWizardHelper)"
                        id="SelfStorageFacilitiesCoverages"
                        visible="selectedClassification.ClassPropertyType == BP7ClassificationPropertyType.TC_SELFSTORAGEFACILITY">
                        <TitleBar
                          title="displaykey.Web.Policy.BP7.Classification.SelfStorageFacilitiesGroup"/>
                      </PanelRef>
                      <PanelRef
                        def="BP7CoveragesDV(selectedClassification, openForEdit, selectedClassification.LandscapeCategory, jobWizardHelper)"
                        id="LandscapeCoverages"
                        visible="selectedClassification.isLandscapeGardening()">
                        <TitleBar
                          title="displaykey.Web.Policy.BP7.Classification.LandscapeGroup"/>
                      </PanelRef>
                    </PanelColumn>
                  </PanelRow>
                </PanelSet>
              </Card>
              <!-- <Card
                id="FunctionalValuationCoveragesCard"
                title="displaykey.Web.Policy.BP7.Classification.FunctionalValuation">
                <PanelRef
                  def="BP7CoveragesDV(selectedClassification, openForEdit, selectedClassification.FunctionalBPPValuationCoverageCoverages, jobWizardHelper)"
                  id="FunctionalValuationCoverages"/>
              </Card> -->
              <Card
                id="AdditionalCoveragesCard"
                title="displaykey.Ext.Web.LineWizard.AdditionalAndOptionalCoverages">
                <PanelRef
                  def="BP7AdditionalCoveragesPanelSet(selectedClassification, selectedClassification.AdditionalCoveragesCategories, true, jobWizardHelper)">
                  <TitleBar
                    id="additionalcoverage"
                    title="displaykey.Web.LineWizard.AdditionalCoverages"/>
                </PanelRef>
                <PanelRef
                  def="BP7AdditionalCoveragesPanelSet(building,selectedClassification.AdditionalCoveragesCategories, true, jobWizardHelper)"
                  id="optionalCoverage">
                  <TitleBar
                    id="optionalCov"
                    title="displaykey.Ext.Web.LineWizard.OptionalCoverages"/>
                </PanelRef>
              </Card>
              <Card
                id="ExclusionsAndConditionsCard"
                title="displaykey.Web.LineWizard.ExclusionsAndConditions">
                <PanelRef
                  def="AdditionalExclusionsAndConditionsPanelSet(selectedClassification, selectedClassification.ExclusionsAndConditionsCategories, true)"
                  id="ExclusionsAndConditions"/>
              </Card>
            </CardViewPanel>
          </ListDetailPanel>
        </PanelRef>
      </PanelSet>
    </Card>
    <Card
      id="AdditionalCoveragesCard"
      title="displaykey.Ext.Web.LineWizard.AdditionalAndOptionalCoverages">
      <PanelRef
        def="BP7AdditionalCoveragesPanelSet(building, {gw.lob.bp7.BP7Categories.BP7BuildingAddlGrp.Code}, true, jobWizardHelper)">
        <TitleBar
          title="displaykey.Web.LineWizard.AdditionalCoverages"/>
        <Toolbar/>
      </PanelRef>
      <PanelRef
        def="BP7OptionalCoverages_ExtPanelSet(building, {gw.lob.bp7.BP7Categories.BP7BuildingOptionalGrp_EXT.Code}, true, jobWizardHelper)">
        <TitleBar
          title="displaykey.Ext.Web.LineWizard.OptionalCoverages"/>
        <Toolbar/>
      </PanelRef>
    </Card>
    <Card
      id="exclusionsAndConditionsCard"
      title="displaykey.Web.LineWizard.ExclusionsAndConditions">
      <PanelRef
        def="AdditionalExclusionsAndConditionsPanelSet(building, {gw.lob.bp7.BP7Categories.BP7BuildingExclGrp.Code, gw.lob.bp7.BP7Categories.BP7BuildingCondGrp.Code}, true)"
        id="policyLevelExclusionsAndConditions"/>
    </Card>
    <Code><![CDATA[function getCategories(category : String) : gw.api.productmodel.CoverageCategory {
  if (building <> null) {
    return building.PolicyLine.Pattern.getCoverageCategory(category)
  }
  
  return null
}

function onChangeForPredominantOverride(currentClassification : entity.BP7Classification): boolean{
  if(currentClassification.PredominantOverride){
    currentClassification.Building.Classifications
      .where(\ classification -> classification != currentClassification)
      .each(\ classification -> {classification.PredominantOverride = false})
  }
  return true
}

function predominantConfirmationMessage(classification : BP7Classification) : String {
  var message : String
  if (classification.PredominantOverride) {
    message = displaykey.Web.Policy.BP7.Classification.ConfirmPredominantOverrideRemoval
  } else {
    message = displaykey.Web.Policy.BP7.Classification.ConfirmPredominantOverride(classification.ClassificationNumber)
  }
  return message
}]]></Code>
  </CardViewPanel>
</PCF>