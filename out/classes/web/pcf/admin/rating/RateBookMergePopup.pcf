<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <Popup
    afterCommit="EditRateBook.go(mergedRateBook)"
    beforeCommit="RateBookMerge.merge()"
    canEdit="true"
    id="RateBookMergePopup"
    startInEditMode="true"
    title="displaykey.Web.Rating.RateBooks.Merge.RateBookMerge">
    <LocationEntryPoint
      signature="RateBookMergePopup(book1 : RateBook, book2 : RateBook)"/>
    <Variable
      name="book1"
      type="RateBook"/>
    <Variable
      name="book2"
      type="RateBook"/>
    <Variable
      initialValue="new gw.rating.rtm.RateBookMerge (book1, book2)"
      name="RateBookMerge"/>
    <Variable
      initialValue="RateBookMerge.MergedRateBook"
      name="mergedRateBook"/>
    <Variable
      initialValue="true"
      name="showAllRows"/>
    <Variable
      initialValue="new gw.pcf.rating.rtm.RateBookMergeUIHelper(book1, book2)"
      name="mergeUIHelper"/>
    <Screen>
      <Toolbar>
        <EditButtons
          editVisible="false"
          updateLabel="displaykey.Web.Rating.RateBooks.Merge.CompleteMerge"/>
      </Toolbar>
      <ListViewPanel>
        <Row>
          <LinkCell
            flex="1"
            visible="true">
            <Link
              id="ConflictToolTipText"
              label="displaykey.Web.Rating.RateBooks.Merge.Instructions"/>
          </LinkCell>
        </Row>
      </ListViewPanel>
      <DetailViewPanel>
        <InputColumn>
          <TextInput
            id="FirstRateBook"
            label="displaykey.Web.Rating.RateBooks.Merge.First"
            value="displaykey.Web.Rating.RateBooks.Merge.CodeAndEdition(book1.BookCode, book1.BookEdition)"/>
          <TextInput
            id="SecondRateBook"
            label="displaykey.Web.Rating.RateBooks.Merge.Second"
            value="displaykey.Web.Rating.RateBooks.Merge.CodeAndEdition(book2.BookCode, book2.BookEdition)"/>
          <TextInput
            editable="true"
            id="PropertyBookEdition"
            label="displaykey.Web.Rating.RateBooks.Edition"
            required="true"
            validationExpression="RateBookMerge.IsMergedRateBookUnique"
            value="mergedRateBook.BookEdition"/>
          <BooleanRadioInput
            editable="true"
            falseLabel="displaykey.Web.Rating.RateBooks.Merge.OnlyRowsWithDifferences"
            id="ShowAllRows"
            label="displaykey.Web.Rating.RateBooks.Merge.Show"
            trueLabel="displaykey.Web.Rating.RateBooks.Merge.AllRows"
            value="showAllRows">
            <PostOnChange/>
          </BooleanRadioInput>
        </InputColumn>
      </DetailViewPanel>
      <DetailViewPanel>
        <InputColumn>
          <Label
            label="displaykey.Web.Rating.RateBooks.Merge.Properties"/>
        </InputColumn>
      </DetailViewPanel>
      <ListViewPanel
        id="RateBookPropertiesLV">
        <Variable
          initialValue="mergeUIHelper.getPossibleValues(RateBook#BookDesc.PropertyInfo.Name)"
          name="DescriptionWrapper"/>
        <Variable
          initialValue="mergeUIHelper.getPossibleValues(RateBook#UWCompany.PropertyInfo.Name)"
          name="UWCompanyWrapper"/>
        <Variable
          initialValue="mergeUIHelper.getPossibleValues(RateBook#BookJurisdiction.PropertyInfo.Name)"
          name="JursidictionWrapper"/>
        <Variable
          initialValue="mergeUIHelper.getPossibleValues(RateBook#PolicyLine.PropertyInfo.Name)"
          name="PolicyLineWrapper"/>
        <Variable
          initialValue="mergeUIHelper.getPossibleValues(RateBook#BookOffering.PropertyInfo.Name)"
          name="OfferingWrapper"/>
        <Variable
          initialValue="mergeUIHelper.getPossibleValues(RateBook#ExpirationDate.PropertyInfo.Name)"
          name="BeforeDateWrapper"/>
        <Variable
          initialValue="mergeUIHelper.getPossibleValues(RateBook#BookGroup.PropertyInfo.Name)"
          name="GroupWrapper"/>
        <Row
          renderAsSmartHeader="true">
          <TextCell
            id="NameHeader"
            value="displaykey.Web.Rating.RateTables.Name"/>
          <TextCell
            id="ResultHeader"
            value="displaykey.Web.Rating.RateBooks.Merge.Result"/>
          <TextCell
            flex="1"
            id="SelectorHeader"
            required="false"
            value="displaykey.Web.Rating.RateBooks.Merge.PropertyHeader(book1.BookCode, book1.BookEdition, book2.BookCode, book2.BookEdition)"
            width="2000"/>
        </Row>
        <Row
          visible="showAllRows or (book1.BookCode != book2.BookCode)">
          <TextCell
            id="PropertyBookCode"
            label="displaykey.Web.Rating.RateTables.Name"
            value="displaykey.Web.Rating.RateBooks.Code"/>
          <Cell
            align="center"
            enableSort="false"
            icon="mergeUIHelper.getRateBookPropertyIcons(RateBook#BookCode.PropertyInfo.Name)"
            iconLabel="mergeUIHelper.getRateBookPropertyIconToolTip(RateBook#BookCode.PropertyInfo.Name)"
            id="BookCodeResult"
            value="true"/>
          <RangeRadioCell
            editable="(book1.BookCode != book2.BookCode)"
            flex="1"
            id="BookCodeSelector"
            sortValueRange="false"
            value="mergedRateBook.BookCode"
            valueRange="(book1.BookCode == book2.BookCode)?{book1.BookCode}:{book1.BookCode, book2.BookCode}"/>
        </Row>
        <Row
          visible="showAllRows or (book1.BookName != book2.BookName)">
          <TextCell
            id="PropertyBookName"
            value="displaykey.Web.Rating.RateBooks.Name"/>
          <Cell
            align="center"
            enableSort="false"
            icon="mergeUIHelper.getRateBookPropertyIcons(RateBook#BookName.PropertyInfo.Name)"
            iconLabel="mergeUIHelper.getRateBookPropertyIconToolTip(RateBook#BookName.PropertyInfo.Name)"
            id="BookNameResult"
            value="true"/>
          <RangeRadioCell
            editable="(book1.BookName != book2.BookName)"
            flex="1"
            id="BookNameSelector"
            sortValueRange="false"
            value="mergedRateBook.BookName"
            valueRange="(book1.BookName == book2.BookName)?{book1.BookName}:{book1.BookName, book2.BookName}"/>
        </Row>
        <Row
          visible="showAllRows or (book1.BookDesc != book2.BookDesc)">
          <TextCell
            id="PropertyBookDescription"
            value="displaykey.Web.Rating.RateBooks.Description"/>
          <Cell
            align="center"
            enableSort="false"
            icon="mergeUIHelper.getRateBookPropertyIcons(RateBook#BookDesc.PropertyInfo.Name)"
            iconLabel="mergeUIHelper.getRateBookPropertyIconToolTip(RateBook#BookDesc.PropertyInfo.Name)"
            id="BookDescriptionResult"
            value="true"/>
          <RangeRadioCell
            editable="(book1.BookDesc != book2.BookDesc)"
            flex="1"
            id="BookDescriptionSelector"
            sortValueRange="false"
            value="RateBookMerge.RadioCellWrapperMap[RateBook#BookDesc.PropertyInfo.Name]"
            valueRange="DescriptionWrapper"/>
        </Row>
        <Row
          visible="showAllRows or (book1.CascadedLookup != book2.CascadedLookup)">
          <TextCell
            id="PropertyCascadedLookup"
            value="displaykey.Web.Rating.RateBooks.CascadedLookup"/>
          <Cell
            align="center"
            enableSort="false"
            icon="mergeUIHelper.getRateBookPropertyIcons(RateBook#CascadedLookup.PropertyInfo.Name)"
            iconLabel="mergeUIHelper.getRateBookPropertyIconToolTip(RateBook#CascadedLookup.PropertyInfo.Name)"
            id="CascadedLookupResult"
            value="true"/>
          <RangeRadioCell
            align="left"
            editable="(book1.CascadedLookup != book2.CascadedLookup)"
            flex="1"
            id="CascadedLookupSelector"
            sortValueRange="false"
            value="mergedRateBook.CascadedLookup"
            valueRange="(book1.CascadedLookup == book2.CascadedLookup)?{book1.CascadedLookup}:{book1.CascadedLookup, book2.CascadedLookup}"/>
        </Row>
        <Row
          visible="showAllRows or (book1.BookGroup != book2.BookGroup)">
          <TextCell
            id="PropertyGroup"
            value="displaykey.Web.Rating.RateBooks.BookGroup"/>
          <Cell
            align="center"
            enableSort="false"
            icon="mergeUIHelper.getRateBookPropertyIcons(RateBook#BookGroup.PropertyInfo.Name)"
            iconLabel="mergeUIHelper.getRateBookPropertyIconToolTip(RateBook#BookGroup.PropertyInfo.Name)"
            id="GroupResult"
            value="true"/>
          <RangeRadioCell
            align="left"
            editable="(book1.BookGroup != book2.BookGroup)"
            flex="1"
            id="GroupSelector"
            sortValueRange="false"
            value="RateBookMerge.RadioCellWrapperMap[RateBook#BookGroup.PropertyInfo.Name]"
            valueRange="GroupWrapper"/>
        </Row>
        <Row
          visible="showAllRows or (book1.UWCompany != book2.UWCompany)">
          <TextCell
            id="PropertyUWCompany"
            value="displaykey.Web.Rating.RateBooks.UWCompany"/>
          <Cell
            align="center"
            enableSort="false"
            icon="mergeUIHelper.getRateBookPropertyIcons(RateBook#UWCompany.PropertyInfo.Name)"
            iconLabel="mergeUIHelper.getRateBookPropertyIconToolTip(RateBook#UWCompany.PropertyInfo.Name)"
            id="UWCompanyResult"
            value="true"/>
          <RangeRadioCell
            editable="(book1.UWCompany != book2.UWCompany)"
            flex="1"
            id="UWCompanySelector"
            sortValueRange="false"
            value="RateBookMerge.RadioCellWrapperMap[RateBook#UWCompany.PropertyInfo.Name]"
            valueRange="UWCompanyWrapper"/>
        </Row>
        <Row
          visible="showAllRows or (book1.BookJurisdiction != book2.BookJurisdiction)">
          <TextCell
            id="PropertyBookJurisdiction"
            value="displaykey.Web.Rating.RateBooks.Jurisdiction"/>
          <Cell
            align="center"
            enableSort="false"
            icon="mergeUIHelper.getRateBookPropertyIcons(RateBook#BookJurisdiction.PropertyInfo.Name)"
            iconLabel="mergeUIHelper.getRateBookPropertyIconToolTip(RateBook#BookJurisdiction.PropertyInfo.Name)"
            id="BookJurisdictionResult"
            value="true"/>
          <RangeRadioCell
            editable="(book1.BookJurisdiction != book2.BookJurisdiction)"
            flex="1"
            id="BookJurisdictionSelector"
            sortValueRange="false"
            value="RateBookMerge.RadioCellWrapperMap[RateBook#BookJurisdiction.PropertyInfo.Name]"
            valueRange="JursidictionWrapper"/>
        </Row>
        <Row
          visible="showAllRows or (book1.PolicyLine != book2.PolicyLine)">
          <TextCell
            id="PropertyPolicyLine"
            value="displaykey.Web.Rating.RateBooks.PolicyLine"/>
          <Cell
            align="center"
            enableSort="false"
            icon="mergeUIHelper.getRateBookPropertyIcons(RateBook#PolicyLine.PropertyInfo.Name)"
            iconLabel="mergeUIHelper.getRateBookPropertyIconToolTip(RateBook#PolicyLine.PropertyInfo.Name)"
            id="PolicyLineResult"
            value="true"/>
          <RangeRadioCell
            editable="(book1.PolicyLine != book2.PolicyLine)"
            flex="1"
            id="PolicyLineSelector"
            optionLabel="(VALUE==displaykey.Web.Rating.RateBooks.Merge.None)?displaykey.Web.Rating.RateBooks.Merge.Generic:VALUE.toString()"
            sortValueRange="false"
            value="RateBookMerge.RadioCellWrapperMap[RateBook#PolicyLine.PropertyInfo.Name]"
            valueRange="PolicyLineWrapper"/>
        </Row>
        <Row
          visible="showAllRows or (book1.BookOffering != book2.BookOffering)">
          <TextCell
            id="PropertyBookOffering"
            value="displaykey.Web.Rating.RateBooks.Offering"/>
          <Cell
            align="center"
            enableSort="false"
            icon="mergeUIHelper.getRateBookPropertyIcons(RateBook#BookOffering.PropertyInfo.Name)"
            iconLabel="mergeUIHelper.getRateBookPropertyIconToolTip(RateBook#BookOffering.PropertyInfo.Name)"
            id="BookOfferingResult"
            value="true"/>
          <RangeRadioCell
            editable="(book1.BookOffering != book2.BookOffering)"
            flex="1"
            id="BookOfferingSelector"
            sortValueRange="false"
            value="RateBookMerge.RadioCellWrapperMap[RateBook#BookOffering.PropertyInfo.Name]"
            valueRange="OfferingWrapper"/>
        </Row>
        <Row
          visible="showAllRows or (book1.EffectiveDate != book2.EffectiveDate) or (book1.ExpirationDate != book2.ExpirationDate)">
          <TextCell
            id="PropertyBookEffectiveDateLabel"
            value="displaykey.Web.Rating.RateBooks.EffectiveDate"/>
          <Cell
            id="blank1"/>
          <Cell
            id="blank2"/>
        </Row>
        <Row
          visible="showAllRows or (book1.EffectiveDate != book2.EffectiveDate)">
          <TextCell
            id="PropertyBookEffectiveDate"
            value="displaykey.Web.Rating.RateBooks.Merge.EffectiveDate.After"/>
          <Cell
            align="center"
            enableSort="false"
            icon="mergeUIHelper.getRateBookPropertyIcons(RateBook#EffectiveDate.PropertyInfo.Name)"
            iconLabel="mergeUIHelper.getRateBookPropertyIconToolTip(RateBook#EffectiveDate.PropertyInfo.Name)"
            id="EffectiveDateResult"
            value="true"/>
          <RangeRadioCell
            editable="(book1.EffectiveDate != book2.EffectiveDate)"
            flex="1"
            id="EffectiveDateSelector"
            sortValueRange="false"
            value="mergedRateBook.EffectiveDate"
            valueRange="(book1.EffectiveDate == book2.EffectiveDate)?{book1.EffectiveDate}:{book1.EffectiveDate, book2.EffectiveDate}"/>
        </Row>
        <Row
          visible="showAllRows or (book1.ExpirationDate != book2.ExpirationDate)">
          <TextCell
            id="PropertyExpirationDate"
            value="displaykey.Web.Rating.RateBooks.Merge.EffectiveDate.Before"/>
          <Cell
            align="center"
            enableSort="false"
            icon="mergeUIHelper.getRateBookPropertyIcons(RateBook#ExpirationDate.PropertyInfo.Name)"
            iconLabel="mergeUIHelper.getRateBookPropertyIconToolTip(RateBook#ExpirationDate.PropertyInfo.Name)"
            id="ExpirationDateResult"
            value="true"/>
          <RangeRadioCell
            editable="(book1.ExpirationDate != book2.ExpirationDate)"
            flex="1"
            id="ExpirationDateSelector"
            sortValueRange="false"
            value="RateBookMerge.RadioCellWrapperMap[RateBook#ExpirationDate.PropertyInfo.Name]"
            valueRange="BeforeDateWrapper"/>
        </Row>
        <Row
          visible="showAllRows or (book1.RenewalEffectiveDate != book2.RenewalEffectiveDate)">
          <TextCell
            id="PropertyRenewalEffectiveDateLabel"
            value="displaykey.Web.Rating.RateBooks.RenewalEffectiveDate"/>
          <Cell
            id="blank3"/>
          <Cell
            id="blank4"/>
        </Row>
        <Row
          visible="showAllRows or (book1.RenewalEffectiveDate != book2.RenewalEffectiveDate)">
          <TextCell
            id="PropertyRenewalEffectiveDate"
            value="displaykey.Web.Rating.RateBooks.Merge.EffectiveDate.After"/>
          <Cell
            align="center"
            enableSort="false"
            icon="mergeUIHelper.getRateBookPropertyIcons(RateBook#RenewalEffectiveDate.PropertyInfo.Name)"
            iconLabel="mergeUIHelper.getRateBookPropertyIconToolTip(RateBook#RenewalEffectiveDate.PropertyInfo.Name)"
            id="RenewalEffectiveDateResult"
            value="true"/>
          <RangeRadioCell
            editable="(book1.RenewalEffectiveDate != book2.RenewalEffectiveDate)"
            flex="1"
            id="RenewalEffectiveDatenSelector"
            sortValueRange="false"
            value="mergedRateBook.RenewalEffectiveDate"
            valueRange="(book1.RenewalEffectiveDate == book2.RenewalEffectiveDate)?{book1.RenewalEffectiveDate}:{book1.RenewalEffectiveDate, book2.RenewalEffectiveDate}"/>
        </Row>
      </ListViewPanel>
      <DetailViewPanel>
        <InputColumn>
          <Label
            label="displaykey.Web.Rating.RateBooks.RateTables"/>
        </InputColumn>
      </DetailViewPanel>
      <ListViewPanel
        id="RateTablesLV">
        <RowIterator
          editable="true"
          elementName="rateTableKey"
          id="RateTables"
          pageSize="0"
          value="RateBookMerge.RateTableKeys">
          <Variable
            initialValue="RateBookMerge.RateTableIconMap.get(rateTableKey)"
            name="conflictStatus"/>
          <Row
            visible="showAllRows or RateBookMerge.tableConflictExists(rateTableKey)">
            <TextCell
              id="PropertyName"
              label="displaykey.Web.Rating.RateTables.Code"
              value="rateTableKey.First"/>
            <Cell
              enableSort="false"
              icon="mergeUIHelper.getIcon(conflictStatus)"
              iconLabel="mergeUIHelper.getIconToolTip(conflictStatus)"
              id="RateTableResult"
              label="displaykey.Web.Rating.RateBooks.Merge.Result"
              showHeaderIcon="false"
              value="true"/>
            <RangeRadioCell
              editable="RateBookMerge.tableConflictExists(rateTableKey)"
              enableSort="false"
              flex="1"
              id="RateTableSelector"
              label="displaykey.Web.Rating.RateBooks.Merge.PropertyHeader(book1.BookCode, book1.BookEdition, book2.BookCode, book2.BookEdition)"
              optionLabel="mergeUIHelper.getRoutineOrTableOptionLabel(conflictStatus, VALUE.Definition.TableName)"
              value="RateBookMerge.MergedRateTables[rateTableKey]"
              valueRange="RateBookMerge.getRateTableFromBothBooks(rateTableKey)"
              width="600"/>
          </Row>
        </RowIterator>
      </ListViewPanel>
      <DetailViewPanel>
        <InputColumn>
          <Label
            label="displaykey.Web.Rating.RateBooks.CalcRoutines"/>
        </InputColumn>
      </DetailViewPanel>
      <ListViewPanel
        id="RateRoutinesLV">
        <RowIterator
          editable="true"
          elementName="rateRoutine"
          id="RateRoutines"
          pageSize="0"
          value="RateBookMerge.RateRoutines">
          <Variable
            initialValue="RateBookMerge.RateRoutinesIconMap.get(rateRoutine.Code)"
            name="conflictStatus"/>
          <Row
            visible="showAllRows or RateBookMerge.rateRoutineConflictsExist(rateRoutine)">
            <TextCell
              id="RateRoutineName"
              label="displaykey.Web.Rating.RateTables.Code"
              value="rateRoutine.Code"/>
            <Cell
              enableSort="false"
              icon="mergeUIHelper.getIcon(conflictStatus)"
              iconLabel="mergeUIHelper.getIconToolTip(conflictStatus)"
              id="RateRoutineResult"
              label="displaykey.Web.Rating.RateBooks.Merge.Result"
              showHeaderIcon="false"
              value="true"/>
            <RangeRadioCell
              editable="RateBookMerge.rateRoutineConflictsExist(rateRoutine)"
              enableSort="false"
              flex="1"
              id="RateRoutineSelector"
              label="displaykey.Web.Rating.RateBooks.Merge.PropertyHeader(book1.BookCode, book1.BookEdition, book2.BookCode, book2.BookEdition)"
              optionLabel="mergeUIHelper.getRoutineOrTableOptionLabel(conflictStatus, VALUE.Name)"
              value="RateBookMerge.MergedRateRoutines[rateRoutine.Code]"
              valueRange="RateBookMerge.getRateRoutinesFromBooks(rateRoutine.Code)"/>
          </Row>
        </RowIterator>
      </ListViewPanel>
    </Screen>
  </Popup>
</PCF>