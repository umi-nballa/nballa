<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../pcf.xsd">
  <Popup
    beforeCommit="validatePolicyContacts(policyContactRole.Branch);policyContactRole.Branch.confirmAnyInsuredAgeOver60()"
    canEdit="canEdit"
    countsAsWork="false"
    id="EditPolicyContactRolePopup"
    returnType="PolicyContactRole"
    startInEditMode="canEdit"
    title="displaykey.Web.EditPolicyContactRolePopup.Title((typeof policyContactRole).TypeInfo.DisplayName, policyContactRole)">
    <LocationEntryPoint
      signature="EditPolicyContactRolePopup(policyContactRole:PolicyContactRole, canEdit: Boolean)"/>
    <LocationEntryPoint
      signature="EditPolicyContactRolePopup(policyContactRole:PolicyContactRole, canEdit: Boolean, additionalInterestDetails : AddlInterestDetail)"/>
    <LocationEntryPoint
      signature="EditPolicyContactRolePopup(policyContactRole:PolicyContactRole, canEdit: Boolean, policyAdditionalInsuredDetail : PolicyAddlInsuredDetail)"/>
    <Variable
      name="policyContactRole"
      type="PolicyContactRole"/>
    <Variable
      name="canEdit"
      type="Boolean"/>
    <Variable
      name="additionalInterestDetails"
      type="AddlInterestDetail"/>
    <Variable
      name="policyAdditionalInsuredDetail"
      type="PolicyAddlInsuredDetail"/>
    <Screen
      editable="true"
      id="ContactDetailScreen">
      <Toolbar>
        <EditButtons
          pickValue="policyContactRole"/>
      </Toolbar>
      <DetailViewPanel>
        <InputColumn>
          <InputSetRef
            def="AdditionalInterestDetails_ExtInputSet(additionalInterestDetails, policyContactRole.AccountContactRole.AccountContact.Contact)"
            visible="policyContactRole.Subtype == TC_PolicyAddlInterest"/>
        </InputColumn>
      </DetailViewPanel>
      <DetailViewPanel
        id="AdditionalInsuredInfoDV"
        visible="policyContactRole typeis PolicyAddlInsured and policyContactRole.Branch.HomeownersLine_HOEExists">
        <Variable
          initialValue="policyContactRole typeis PolicyAddlInsured and una.pageprocess.ContactPCFController.areAdditionalInsuredCoverageFieldsAvailable(policyContactRole.Branch)"
          name="areCoverageFieldsAvailable"
          type="Boolean"/>
        <InputColumn>
          <TypeKeyInput
            available="policyAdditionalInsuredDetail.AdditionalInsuredType != typekey.AdditionalInsuredType.TC_TRUESTEE_EXT"
            editable="true"
            id="Type"
            label="displaykey.Web.LineWizard.AdditionalInsured.Type"
            required="true"
            value="policyAdditionalInsuredDetail.AdditionalInsuredType"/>
          <Input
            editable="true"
            id="insuredType"
            label="&quot;Additional Insured Type&quot;"
            required="true"
            value="policyAdditionalInsuredDetail.CoverageType_Ext"
            visible="areCoverageFieldsAvailable"/>
          <Input
            editable="true"
            id="interest"
            label="&quot;Additional Insured Interest&quot;"
            required="true"
            value="policyAdditionalInsuredDetail.InterestType_Ext"
            visible="areCoverageFieldsAvailable"/>
        </InputColumn>
      </DetailViewPanel>
      <PanelRef
        def="PolicyContactRoleDetailsCV(policyContactRole, canEdit)"/>
    </Screen>
    <Code><![CDATA[function validatePolicyContacts(policyPeriod : PolicyPeriod) {
  
  gw.validation.PCValidationContext.doPageLevelValidation( \ context -> {
    for (line in policyPeriod.Lines) {
      for (policyAddlInsured in line.AdditionalInsureds) {     
        var addlInsuredValidator = new gw.policy.PolicyAddlInsuredAndTypeUniqueValidation(context, policyAddlInsured)
        addlInsuredValidator.validate()
      }
    }
    
    // Check to make sure the user didn't delete the policy address
    var validator = new gw.policy.PolicyPeriodValidation(context, policyPeriod  )
    validator.checkPolicyAddress()
  })
  
}]]></Code>
  </Popup>
</PCF>