<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../pcf.xsd">
  <DetailViewPanel
    editable="true"
    id="ProducerCodeDetail_BasicDV">
    <Require
      name="producerCode"
      type="ProducerCode"/>
    <Variable
      initialValue="gw.web.admin.ProducerCodeUIHelper.getCommissionPlans(producerCode.Organization.Tier)"
      name="commissionPlans"
      recalculateOnRefresh="true"/>
    <!-- Variable
      initialValue="producerCode.Organization"
      name="organization"
      recalculateOnRefresh="true"/>
    <Variable
      initialValue="organization!=null?new gw.web.admin.OrganizationUIHelper(organization):null"
      name="orgHelper"
      recalculateOnRefresh="true"/ -->
    <Variable
      initialValue="new gw.pcf.contacts.AddressAutoFillSearchOwner(producerCode.Address, true)"
      name="addrAutoFillSearchOwner"/>
    <Variable
      initialValue="producerCode.AllUsers.where(\u -&gt; u.Contact != producerCode.Contact_Ext).map(\u -&gt; u.Contact)"
      name="userContacts"/>
    <!-- Variable
      initialValue="orgHelper.getAllOrganizationUsers()"
      name="organizationUsers"
      recalculateOnRefresh="true"/>
    <Variable
      initialValue="getcontactlist(organizationUsers, organization)//organizationUsers?.where(\u -&gt; u != null &amp;&amp; u?.Contact != organization?.Contact).map(\u -&gt; u.Contact).toTypedArray()"
      name="userContacts"/ -->
    <InputColumn>
      <Input
        editable="true"
        id="Code"
        label="displaykey.Web.Admin.ProducerCodeDetail.Code"
        required="true"
        value="producerCode.Code"/>
      <TextAreaInput
        editable="true"
        id="Description"
        label="displaykey.Web.Admin.ProducerCodeDetail.Description"
        numRows="2"
        value="producerCode.Description"/>
      <OrgInput
        action="OrganizationDetail.go(producerCode.Organization)"
        actionAvailable="producerCode.Organization != null and not User.util.CurrentUser.ExternalUser"
        editable="producerCode.New and not User.util.CurrentUser.ExternalUser"
        id="Organization"
        label="displaykey.Web.Admin.ProducerCodeDetail.Organization"
        onPick="gw.web.admin.ProducerCodeUIHelper.initializeCommissionPlans(producerCode, producerCode.OrganizationWithUpdate); gw.api.web.PebblesUtil.invalidateIterators(CurrentLocation, CommissionPlan) "
        pickLocation="OrganizationSearchPopup.push(null,true)"
        requestValidationExpression="VALUE.ProducerStatus &lt;&gt; TC_ACTIVE ? displaykey.Web.Admin.ProducerCodeDetail.IncorrectProducerStatus(VALUE.Type.DisplayName) : null"
        required="true"
        value="producerCode.OrganizationWithUpdate">
        <PostOnChange
          onChange="gw.web.admin.ProducerCodeUIHelper.initializeCommissionPlans(producerCode, producerCode.OrganizationWithUpdate); gw.api.web.PebblesUtil.invalidateIterators(CurrentLocation, CommissionPlan)"
          target="CommissionPlan"/>
      </OrgInput>
      <Input
        editable="true"
        id="AllStateNumber"
        label="displaykey.Web.Admin.ProducerCodeDetail.BasicDV.AllStateNumber_Ext"
        required="false"
        value="producerCode.AllStateNumber_Ext"/>
      <RangeInput
        available="producerCode.Organization != null"
        editable="producerCode.New"
        id="CommissionPlan"
        label="displaykey.Web.Admin.ProducerCodeDetail.CommissionPlan"
        noneSelectedLabel="displaykey.Web.ProducerCodeDetailDV.AcceptDefault"
        optionLabel="commissionPlans.firstWhere( \ c -&gt; c.Id == VALUE ).Name"
        value="producerCode.SingleCurrencyCommissionPlanID"
        valueRange="commissionPlans*.Id"
        visible="not gw.api.util.CurrencyUtil.isMultiCurrencyMode()"/>
      <ProducerCodeInput
        editable="true"
        id="ParentCode"
        label="displaykey.Web.Admin.ProducerCodeDetail.ParentCode"
        pickLocation="AdminProducerCodeSearchPopup.push(producerCode.Organization)"
        value="producerCode.Parent">
        <PostOnChange/>
      </ProducerCodeInput>
      <DateInput
        editable="true"
        id="AppointmentDate"
        label="displaykey.Web.Admin.ProducerCodeDetail.AppointmentDate"
        value="producerCode.AppointmentDate">
        <PostOnChange/>
      </DateInput>
      <TypeKeyInput
        editable="true"
        id="Status"
        label="displaykey.Web.Admin.ProducerCodeDetail.Status"
        required="true"
        value="producerCode.ProducerStatus">
        <PostOnChange/>
      </TypeKeyInput>
      <DateInput
        editable="true"
        id="TerminationDate"
        label="displaykey.Web.Admin.ProducerCodeDetail.TerminationDate"
        value="producerCode.TerminationDate"
        visible="producerCode.ProducerStatus == &quot;Terminating&quot; ||                             producerCode.ProducerStatus == &quot;Terminated&quot;"/>
      <InputSetRef
        def="AddressOwnerAddressInputSet(addrAutoFillSearchOwner)"/>
      <TypeKeyInput
        id="Currency"
        label="displaykey.Web.Admin.ProducerCodeDetail.Currency"
        value="producerCode.SingleCurrencyCommissionPlanCurrency"
        visible="not gw.api.util.CurrencyUtil.isMultiCurrencyMode()"/>
      <BooleanRadioInput
        editable="true //perm.Organization.editagency(producerCode)"
        id="UseDirectDeposit"
        label="displaykey.Web.Admin.ProducerCodeDetail.BasicDV.UseDirectDeposit_Ext"
        value="producerCode.UseDirectDeposit_Ext"/>
      <BooleanRadioInput
        editable="true //perm.Organization.editagency(producerCode)"
        id="PrintOnDec"
        label="displaykey.Web.Admin.ProducerCodeDetail.BasicDV.PrintOnDec_Ext"
        value="producerCode.PrintOnDec_Ext"/>
      <BooleanRadioInput
        editable="true //perm.Organization.editagency(producerCode)"
        id="SendCommission"
        label="displaykey.Web.Admin.ProducerCodeDetail.BasicDV.SendCommission_Ext"
        value="producerCode.SendCommission_Ext"/>
      <BooleanRadioInput
        editable="true //perm.Organization.editagency(producerCode)"
        id="SuppressPrint"
        label="displaykey.Web.Admin.ProducerCodeDetail.BasicDV.SuppressPrint_Ext"
        value="producerCode.SuppressPrint_Ext"/>
      <BooleanRadioInput
        editable="true //perm.Organization.editagency(producerCode)"
        id="EligibleforAffinity"
        label="displaykey.Web.Admin.ProducerCodeDetail.BasicDV.EligibleForAffinity_Ext"
        value="producerCode.EligibleForAffinity_Ext"/>
      <TypeKeyInput
        editable="true //perm.Organization.editagency(producerCode)"
        id="UWCategory_Ext"
        label="displaykey.Web.Admin.ProducerCodeDetail.BasicDV.UWCategory_Ext"
        required="false"
        value="producerCode.UWCategory_Ext"
        visible="true">
        <PostOnChange
          target="DATA_ONLY"/>
      </TypeKeyInput>
      <TypeKeyInput
        editable="true //perm.Organization.editagency(producerCode)"
        id="RewardLevel_Ext"
        label="displaykey.Web.Admin.ProducerCodeDetail.BasicDV.RewardLevel_Ext"
        required="false"
        value="producerCode.RewardLevel_Ext"
        visible="true">
        <PostOnChange
          target="DATA_ONLY"/>
      </TypeKeyInput>
      <InputDivider/>
      <Label
        label="displaykey.Web.Admin.ProducerCodeDetail.ParticipantsAssignmentLogic"/>
      <Input
        action="UserDetailPage.go(producerCode.PreferredUnderwriter)"
        actionAvailable="producerCode.PreferredUnderwriter != null and not User.util.CurrentUser.ExternalUser"
        editable="not User.util.CurrentUser.ExternalUser"
        id="PreferredUnderwriter"
        label="displaykey.Web.Admin.ProducerCodeDetail.PreferredUnderwriter"
        value="producerCode.PreferredUnderwriter"
        visible="perm.System.prodcodeviewprefuw"/>
      <PickerInput
        action="GroupDetailPage.go(producerCode.Branch)"
        actionAvailable="producerCode.Branch != null and producerCode.Branch.GroupType != &quot;root&quot; and not User.util.CurrentUser.ExternalUser"
        editable="not User.util.CurrentUser.ExternalUser"
        id="Branch"
        inputConversion="gw.web.admin.ProducerCodeUIHelper.performBranchSearch(VALUE)"
        label="displaykey.Web.Admin.ProducerCodeDetail.Branch"
        pickLocation="OrganizationBranchSearchPopup.push()"
        value="producerCode.Branch">
        <PostOnChange/>
      </PickerInput>
      <InputDivider/>
      <Input
        boldLabel="true"
        id="PrimaryContactLabel"
        label="displaykey.Web.Organization.PrimaryContact"
        value="&quot;&quot;"
        visible="not CurrentLocation.InEditMode"/>
      <Input
        boldLabel="true"
        hideChildrenIfReadOnly="false"
        id="ChangePrimaryContactButton"
        label="displaykey.Web.producerCode.PrimaryContact"
        value="displaykey.Web.Policy.Account.PrimaryInsured.ChangeTo"
        visible="CurrentLocation.InEditMode">
        <MenuItem
          id="OtherExistingContact"
          label="displaykey.Web.Policy.Contact.ExistingContact">
          <MenuItemIterator
            elementName="Contact_Ext"
            id="UnassignedContactIterator"
            value="userContacts">
            <IteratorSort
              sortBy="Contact_Ext.DisplayName"
              sortOrder="1"/>
            <MenuItem
              action="producerCode.Contact_Ext = Contact_Ext"
              id="UnassignedContact"
              label="Contact_Ext.DisplayName"/>
          </MenuItemIterator>
          <PickerMenuItem
            action="UserSearchPopup.push(null)"
            id="MoreUser"
            label="displaykey.Web.ContactDetail.MoreUser"
            onPick="producerCode.Contact_Ext = PickedValue.Contact"
            visible="producerCode.AllUsers.Count &gt; 10"/>
        </MenuItem>
        <MenuItem
          action="NewOrganizationUserPopup.push(producerCode)"
          id="NewUser"
          label="displaykey.Web.ContactDetail.NewUser"
          visible="perm.User.create"/>
        <PickerMenuItem
          action="NewContactPopup.push(typekey.ContactType.TC_COMPANY)"
          id="NewCompany"
          label="displaykey.Web.ContactDetail.NewCompany"
          onPick="producerCode.Contact_Ext = PickedValue"/>
        <PickerMenuItem
          action="NewContactPopup.push(typekey.ContactType.TC_PERSON)"
          id="NewPerson"
          label="displaykey.Web.ContactDetail.NewPerson"
          onPick="producerCode.Contact_Ext = PickedValue"/>
      </Input>
      <InputSet
        visible="true //producerCode.Contact_Ext != null">
        <Input
          action="OrganizationContactForward.push( producerCode.Contact_Ext )"
          id="ContactName"
          label="displaykey.Web.Policy.Account.Applicant.Name"
          value="producerCode.Contact_Ext"
          visible="true"/>
        <InputSetRef
          def="GlobalPhoneInputSet(new gw.api.phone.BasicPhoneOwner(new gw.api.phone.ContactPhoneDelegate(producerCode.Contact_Ext, Contact#WorkPhone), displaykey.Web.ContactDetail.Phone))"
          editable="true"
          id="WorkPhone"
          visible="true"/>
        <Label
          label="displaykey.Web.ContactDetail.Location"/>
        <InputSetRef
          def="AddressInputSet(new gw.pcf.contacts.AddressInputSetAddressOwner(producerCode.Contact_Ext.PrimaryAddress, false, true))"
          visible="true //producerCode.Contact_Ext != null"/>
      </InputSet>
      <Input
        editable="true"
        id="AddressType"
        label="displaykey.Web.AddressDetail.AddressType"
        required="true"
        value="producerCode.Contact_Ext.PrimaryAddress.AddressType"
        visible="true //producerCode.Contact_Ext != null"/>
      <Input
        editable="true"
        id="AddressDescription"
        label="displaykey.Web.AddressDetail.Description"
        value="producerCode.Contact_Ext.PrimaryAddress.Description"
        visible="true //producerCode.Contact_Ext != null"/>
    </InputColumn>
    <Code><![CDATA[function getcontactlist(organizationUser:List<User>, organizatio:Organization):UserContact[]
{
  //if(organizationUser!=null && organizationUser.size()>0)
  return organizationUser?.where(\u -> u != null && u?.Contact != organizatio?.Contact).map(\u -> u.Contact).toTypedArray()
  //else
  //return null
}

]]></Code>
  </DetailViewPanel>
</PCF>