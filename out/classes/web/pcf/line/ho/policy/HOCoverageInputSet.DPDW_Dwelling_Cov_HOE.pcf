<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../../pcf.xsd">
  <InputSet
    id="HOCoverageInputSet"
    mode="DPDW_Dwelling_Cov_HOE">
    <Require
      name="coveragePattern"
      type="gw.api.productmodel.ClausePattern"/>
    <Require
      name="coverable"
      type="Coverable"/>
    <Require
      name="openForEdit"
      type="boolean"/>
    <HiddenInput
      id="CovPatternCode"
      value="coveragePattern.CodeIdentifier"/>
    <InputGroup
      allowToggle="coveragePattern.allowToggle(coverable)"
      childrenVisible="coverable.getCoverageConditionOrExclusion(coveragePattern) != null"
      id="CovPatternInputGroup"
      label="coveragePattern.DisplayName"
      onToggle="coverable.setCoverageConditionOrExclusionExists(coveragePattern, VALUE);setDPDWOtherStructures()">
      <InputIterator
        elementName="term"
        forceRefreshDespiteChangedEntries="true"
        id="CovTermIterator"
        type="gw.api.domain.covterm.CovTerm"
        value="coverable.getCoverageConditionOrExclusion(coveragePattern).CovTerms.sortBy( \ term -&gt; term.Pattern.Priority )">
        <InputSetRef
          def="CovTermPOCHOEInputSet(term, openForEdit, coverable)"
          mode="term.ValueTypeName"/>
      </InputIterator>
      <PostOnChange/>
    </InputGroup>
    <InputDivider
      visible="openForEdit or coverable.getCoverageConditionOrExclusion(coveragePattern) != null"/>
    <Code><![CDATA[function setDPDWOtherStructures() {
  var dwelling = coverable as Dwelling_HOE
  if (dwelling.DPDW_Dwelling_Cov_HOEExists) {
    coverable.setCoverageConditionOrExclusionExists("DPDW_Other_Structures_HOE", true)
    coverable.setCoverageConditionOrExclusionExists("DPDW_Loss_Of_Use_HOE", true)
  } else {
    coverable.setCoverageConditionOrExclusionExists("DPDW_Other_Structures_HOE", false)
    coverable.setCoverageConditionOrExclusionExists("DPDW_Loss_Of_Use_HOE", false)
  }
}]]></Code>
  </InputSet>
</PCF>