<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <Page
    canEdit="true"
    canVisit="perm.System.viewbulkproducerchange_ext"
    id="BPCAllMainPage"
    startInEditMode="true"
    title="displaykey.Accelerator.BulkProducerChange.All_Accounts_Policies">
    <LocationEntryPoint
      signature="BPCAllMainPage()"/>
    <Variable
      initialValue="new gw.acc.bulkproducerchange.BPCAdminHelper()"
      name="batchHelper"
      type="gw.acc.bulkproducerchange.BPCAdminHelper"/>
    <Screen
      editable="true">
      <DetailViewPanel
        editable="true">
        <InputColumn>
          <Input
            editable="true"
            id="searchBPCBatch"
            label="displaykey.Accelerator.BulkProducerChange.BatchID"
            value="batchHelper.batchNum">
            <PostOnChange
              onChange="batchHelper.batchDate=null"/>
          </Input>
          <DateInput
            editable="true"
            id="searchBPCDate"
            label="displaykey.Accelerator.BulkProducerChange.CreateDate"
            value="batchHelper.batchDate">
            <PostOnChange
              onChange="batchHelper.batchNum=null"/>
          </DateInput>
          <ButtonInput
            action="batchHelper.searchBPCRecords(BPCTargets_Ext.TC_ALL.Code)"
            default="true"
            id="search"
            shortcut="S"
            value="displaykey.Accelerator.BulkProducerChange.SearchRecords"/>
        </InputColumn>
        <InputColumn>
          <ButtonInput
            action="BPCCreateAllOptionsBatchPopup.push(batchHelper)"
            align="left"
            id="create"
            shortcut="C"
            value="displaykey.Accelerator.BulkProducerChange.CreateNewBatch"
            visible="perm.System.editbulkproducerchange_ext"/>
          <TextInput
            boldLabel="true"
            boldValue="true"
            id="Testing2"
            label="displaykey.Accelerator.BulkProducerChange.AllNoteLabel"
            value="displaykey.Accelerator.BulkProducerChange.AllNoteText"/>
          <Label/>
        </InputColumn>
        <InputColumn/>
      </DetailViewPanel>
      <PanelDivider/>
      <PanelRef
        editable="true">
        <CardViewPanel>
          <Card
            id="PolicyHistory"
            title="displaykey.Accelerator.BulkProducerChange.Policies">
            <PanelRef>
              <Toolbar>
                <ToolbarFilter
                  iterator="policyRecords"
                  name="testFilter">
                  <ToolbarFilterOption
                    filter="gw.api.util.CoreFilters.ALL"
                    label="displaykey.Accelerator.BulkProducerChange.All"
                    selectOnEnter="true"/>
                  <ToolbarFilterOption
                    filter="new filters.StandardBeanFilter(typekey.BPCRecordStatus_Ext.TC_UNPROCESSED.DisplayName, \rec -&gt; (rec as BPCRecord_Ext).Status == typekey.BPCRecordStatus_Ext.TC_UNPROCESSED)"/>
                  <ToolbarFilterOption
                    filter="new filters.StandardBeanFilter(typekey.BPCRecordStatus_Ext.TC_PROCESSED.DisplayName, \rec -&gt; (rec as BPCRecord_Ext).Status == typekey.BPCRecordStatus_Ext.TC_PROCESSED)"
                    label="typekey.BPCRecordStatus_Ext.TC_PROCESSED.DisplayName"/>
                  <ToolbarFilterOption
                    filter="new filters.StandardBeanFilter(typekey.BPCRecordStatus_Ext.TC_FAILED.DisplayName, \rec -&gt; (rec as BPCRecord_Ext).Status == typekey.BPCRecordStatus_Ext.TC_FAILED)"
                    label="typekey.BPCRecordStatus_Ext.TC_FAILED.DisplayName"/>
                  <ToolbarFilterOption
                    filter="new filters.StandardBeanFilter(typekey.BPCRecordStatus_Ext.TC_SKIPPED.DisplayName, \rec -&gt; (rec as BPCRecord_Ext).Status == typekey.BPCRecordStatus_Ext.TC_SKIPPED)"
                    label="typekey.BPCRecordStatus_Ext.TC_SKIPPED.DisplayName"/>
                  <ToolbarFilterOption
                    filter="new filters.StandardBeanFilter(typekey.BPCRecordStatus_Ext.TC_PENDINGRENEWAL.DisplayName, \rec -&gt; (rec as BPCRecord_Ext).Status == typekey.BPCRecordStatus_Ext.TC_PENDINGRENEWAL)"
                    label="typekey.BPCRecordStatus_Ext.TC_PENDINGRENEWAL.DisplayName"/>
                </ToolbarFilter>
                <ToolbarDivider/>
                <ToolbarButton
                  action="gw.api.print.ListViewPrintOptionPopupAction.printListViewOnlyWithOptions( &quot;PoliciesBatchLV&quot; )"
                  id="PrintExportPolicies"
                  label="displaykey.Web.PolicySearch.Export"
                  shortcut="E"/>
                <ToolbarButton
                  action="if (batchHelper.Batch.Completed == false) batchHelper.cancelBatch() else batchHelper.reOpenBatch()"
                  id="CancelReopenBatchPolicies"
                  label="(batchHelper.Batch.Completed == false)?displaykey.Accelerator.BulkProducerChange.CancelBatch:displaykey.Accelerator.BulkProducerChange.Reopen"
                  visible="batchHelper.Batch != null"/>
                <ToolbarButton
                  action="gw.transaction.Transaction.getCurrent().commit()"
                  id="SaveChangesPolicies"
                  label="displaykey.Accelerator.BulkProducerChange.SaveChanges"
                  visible="gw.transaction.Transaction.getCurrent().UpdatedBeans.Count &gt; 0"/>
              </Toolbar>
              <ListViewPanel
                id="PoliciesBatchLV">
                <Row
                  renderAsSmartHeader="true">
                  <TextCell
                    id="BatchStatusPolicies"
                    label="displaykey.Accelerator.BulkProducerChange.BatchStatus"
                    value="(batchHelper.Batch.Completed)?displaykey.Accelerator.BulkProducerChange.Completed:displaykey.Accelerator.BulkProducerChange.Open"
                    visible="batchHelper.Batch != null"/>
                </Row>
                <RowIterator
                  editable="false"
                  elementName="record"
                  id="policyRecords"
                  value="batchHelper.PolicyRecords">
                  <Row>
                    <Cell
                      id="recordbatch"
                      label="displaykey.Accelerator.BulkProducerChange.BatchID"
                      value="record.Batch.BatchCode"/>
                    <Cell
                      id="status"
                      label="displaykey.Accelerator.BulkProducerChange.Status"
                      value="record.Status"/>
                    <Cell
                      id="recordcreatedate"
                      label="displaykey.Accelerator.BulkProducerChange.CreateDate"
                      value="record.CreateTime"/>
                    <Cell
                      id="recordcreateuser"
                      label="displaykey.Web.UWIssue.UWIssueHistoryLV.ResponsibleUser"
                      value="record.CreateUser"/>
                    <Cell
                      enableSort="false"
                      id="target"
                      label="displaykey.Accelerator.BulkProducerChange.ProcessDate"
                      value="record.ProcessDate"/>
                    <Cell
                      enableSort="false"
                      id="recordpolicy"
                      label="displaykey.Accelerator.BulkProducerChange.PolicyNumber"
                      value="record.Policy.Periods[0].PolicyNumber"/>
                    <Cell
                      id="recordnewcode"
                      label="displaykey.Accelerator.BulkProducerChange.NewProducerCode"
                      value="record.NewProducerCode"/>
                    <Cell
                      id="recordoldcode"
                      label="displaykey.Accelerator.BulkProducerChange.OldProducerCode"
                      value="record.OldProducerCode"/>
                    <Cell
                      enableSort="false"
                      id="recordreason"
                      label="displaykey.Accelerator.BulkProducerChange.Reason"
                      value="record.Reason.Description"/>
                    <ButtonCell
                      action="if (record.Status == BPCRecordStatus_Ext.TC_UNPROCESSED) batchHelper.cancelRecord(record) else if (record.Status == BPCRecordStatus_Ext.TC_CANCELED) batchHelper.uncancelRecord(record)"
                      available="(record.Status == BPCRecordStatus_Ext.TC_CANCELED or record.Status == BPCRecordStatus_Ext.TC_UNPROCESSED) and not record.Batch.Completed"
                      id="cancelRecord"
                      label="displaykey.Accelerator.BulkProducerChange.CancelRecord"
                      value="(record.Status != BPCRecordStatus_Ext.TC_CANCELED)?displaykey.Accelerator.BulkProducerChange.Cancel:displaykey.Accelerator.BulkProducerChange.Reopen"
                      visible="batchHelper.Batch != null"/>
                  </Row>
                </RowIterator>
              </ListViewPanel>
            </PanelRef>
          </Card>
          <Card
            id="AccountsHistory"
            title="displaykey.Accelerator.BulkProducerChange.Accounts">
            <PanelRef
              editable="true">
              <Toolbar>
                <ToolbarFilter
                  iterator="accountRecords"
                  name="testFilter">
                  <ToolbarFilterOption
                    filter="gw.api.util.CoreFilters.ALL"
                    label="displaykey.Accelerator.BulkProducerChange.All"
                    selectOnEnter="true"/>
                  <ToolbarFilterOption
                    filter="new filters.StandardBeanFilter(typekey.BPCRecordStatus_Ext.TC_UNPROCESSED.DisplayName, \rec -&gt; (rec as BPCRecord_Ext).Status == typekey.BPCRecordStatus_Ext.TC_UNPROCESSED)"
                    label="typekey.BPCRecordStatus_Ext.TC_UNPROCESSED.DisplayName"/>
                  <ToolbarFilterOption
                    filter="new filters.StandardBeanFilter(typekey.BPCRecordStatus_Ext.TC_PROCESSED.DisplayName, \rec -&gt; (rec as BPCRecord_Ext).Status == typekey.BPCRecordStatus_Ext.TC_PROCESSED)"
                    label="typekey.BPCRecordStatus_Ext.TC_PROCESSED.DisplayName"/>
                  <ToolbarFilterOption
                    filter="new filters.StandardBeanFilter(typekey.BPCRecordStatus_Ext.TC_FAILED.DisplayName, \rec -&gt; (rec as BPCRecord_Ext).Status == typekey.BPCRecordStatus_Ext.TC_FAILED)"
                    label="typekey.BPCRecordStatus_Ext.TC_FAILED.DisplayName"/>
                  <ToolbarFilterOption
                    filter="new filters.StandardBeanFilter(typekey.BPCRecordStatus_Ext.TC_SKIPPED.DisplayName, \rec -&gt; (rec as BPCRecord_Ext).Status == typekey.BPCRecordStatus_Ext.TC_SKIPPED)"
                    label="typekey.BPCRecordStatus_Ext.TC_SKIPPED.DisplayName"/>
                  <ToolbarFilterOption
                    filter="new filters.StandardBeanFilter(typekey.BPCRecordStatus_Ext.TC_PENDINGRENEWAL.DisplayName, \rec -&gt; (rec as BPCRecord_Ext).Status == typekey.BPCRecordStatus_Ext.TC_PENDINGRENEWAL)"
                    label="typekey.BPCRecordStatus_Ext.TC_PENDINGRENEWAL.DisplayName"/>
                </ToolbarFilter>
                <ToolbarDivider/>
                <ToolbarButton
                  action="gw.api.print.ListViewPrintOptionPopupAction.printListViewOnlyWithOptions( &quot;AccountsBatchLV&quot; )"
                  id="PrintExportAccounts"
                  label="displaykey.Web.PolicySearch.Export"
                  shortcut="E"/>
                <ToolbarButton
                  action="if (batchHelper.Batch.Completed == false) batchHelper.cancelBatch() else batchHelper.reOpenBatch()"
                  id="CancelReopenBatch"
                  label="(batchHelper.Batch.Completed == false)?displaykey.Accelerator.BulkProducerChange.CancelBatch:displaykey.Accelerator.BulkProducerChange.Reopen"
                  visible="batchHelper.Batch != null"/>
                <ToolbarButton
                  action="gw.transaction.Transaction.getCurrent().commit()"
                  id="SaveChangesAccounts"
                  label="displaykey.Accelerator.BulkProducerChange.SaveChanges"
                  visible="gw.transaction.Transaction.getCurrent().UpdatedBeans.Count &gt; 0"/>
              </Toolbar>
              <ListViewPanel
                editable="true"
                id="AccountsBatchLV">
                <Row
                  renderAsSmartHeader="true">
                  <TextCell
                    id="BatchStatus"
                    label="displaykey.Accelerator.BulkProducerChange.BatchStatus"
                    value="(batchHelper.Batch.Completed)?displaykey.Accelerator.BulkProducerChange.Completed:displaykey.Accelerator.BulkProducerChange.Open"
                    visible="batchHelper.Batch != null"/>
                </Row>
                <RowIterator
                  editable="true"
                  elementName="record"
                  id="accountRecords"
                  value="batchHelper.AccountRecords">
                  <Row>
                    <Cell
                      id="recordbatch"
                      label="displaykey.Accelerator.BulkProducerChange.BatchID"
                      value="record.Batch.BatchCode"/>
                    <Cell
                      id="status"
                      label="displaykey.Accelerator.BulkProducerChange.Status"
                      value="record.Status"/>
                    <Cell
                      id="recordcreatedate"
                      label="displaykey.Accelerator.BulkProducerChange.CreateDate"
                      value="record.CreateTime"/>
                    <Cell
                      id="recordcreateuser"
                      label="displaykey.Web.UWIssue.UWIssueHistoryLV.ResponsibleUser"
                      value="record.CreateUser"/>
                    <Cell
                      enableSort="false"
                      id="target"
                      label="displaykey.Accelerator.BulkProducerChange.ProcessDate"
                      value="record.ProcessDate"/>
                    <Cell
                      enableSort="false"
                      id="recordpolicy"
                      label="&quot;Account Number&quot;"
                      value="record.Account.AccountNumber"/>
                    <Cell
                      id="recordnewcode"
                      label="displaykey.Accelerator.BulkProducerChange.NewProducerCode"
                      value="record.NewProducerCode"/>
                    <Cell
                      id="recordoldcode"
                      label="displaykey.Accelerator.BulkProducerChange.OldProducerCode"
                      value="record.OldProducerCode"/>
                    <Cell
                      enableSort="false"
                      id="recordreason"
                      label="displaykey.Accelerator.BulkProducerChange.Reason"
                      value="record.Reason"/>
                    <ButtonCell
                      action="if (record.Status == BPCRecordStatus_Ext.TC_UNPROCESSED) batchHelper.cancelRecord(record) else if (record.Status == BPCRecordStatus_Ext.TC_CANCELED) batchHelper.uncancelRecord(record)"
                      available="(record.Status == BPCRecordStatus_Ext.TC_CANCELED or record.Status == BPCRecordStatus_Ext.TC_UNPROCESSED) and not record.Batch.Completed"
                      hideChildrenIfReadOnly="true"
                      id="cancelrecord"
                      label="displaykey.Accelerator.BulkProducerChange.CancelRecord"
                      value="(record.Status != BPCRecordStatus_Ext.TC_CANCELED) ? displaykey.Accelerator.BulkProducerChange.Cancel : displaykey.Accelerator.BulkProducerChange.Reopen"
                      visible="batchHelper.Batch != null"/>
                  </Row>
                </RowIterator>
              </ListViewPanel>
            </PanelRef>
          </Card>
        </CardViewPanel>
      </PanelRef>
    </Screen>
  </Page>
</PCF>