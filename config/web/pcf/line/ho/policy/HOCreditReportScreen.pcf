<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../pcf.xsd">
  <Screen
    editable="openForEdit"
    id="HOCreditReportScreen">
    <Require
      name="period"
      type="PolicyPeriod"/>
    <Require
      name="openForEdit"
      type="boolean"/>
    <Require
      name="jobWizardHelper"
      type="web.job.JobWizardHelper"/>
    <Require
      name="Job"
      type="Job"/>
    <Variable
      initialValue="period.CreditInfoExt.CreditReport == null ? false : period.CreditInfoExt.CreditReport.AlternateAddressInd"
      name="hasPrimaryNamedInsuredMoved"
      type="boolean"/>
    <Variable
      initialValue="period.CreditInfoExt.CreditReport == null || period.CreditInfoExt.CreditReport.AlternateAddress == null ? new Address() : period.CreditInfoExt.CreditReport.AlternateAddress"
      name="aFormerAddress"
      type="Address"/>
    <Variable
      initialValue="period.CreditInfoExt.CreditReport == null ? false : period.CreditInfoExt.CreditReport.AlternateNameInd"
      name="hasPrimaryNamedInsuredNameChanged"
      type="boolean"/>
    <Variable
      initialValue="period.CreditInfoExt.CreditReport == null ? &quot;&quot; : period.CreditInfoExt.CreditReport.AlternateFirstName"
      name="formerFirstName"
      type="String"/>
    <Variable
      initialValue="period.CreditInfoExt.CreditReport == null ? &quot;&quot; : period.CreditInfoExt.CreditReport.AlternateMiddleName"
      name="formerMiddleName"
      type="String"/>
    <Variable
      initialValue="period.CreditInfoExt.CreditReport == null ? &quot;&quot; : period.CreditInfoExt.CreditReport.AlternateLastName"
      name="formerLastName"
      type="String"/>
    <Variable
      initialValue="setCreditRecordandDefaultValue()"
      name="creditLevelModeInd1"
      type="boolean"/>
    <Variable
      initialValue="una.integration.framework.util.CreditReportUtil.isCreditReportRequired(period)"
      name="isCreditReportRequired"
      type="boolean"/>
    <Variable
      initialValue="period.CreditInfoExt.CreditReport.PolicyContactRole"
      name="creditReportContact"
      type="PolicyContactRole"/>
    <Toolbar>
      <WizardButtons/>
      <ToolbarButtonSetRef
        mode="Job.Subtype"
        toolbarButtonSet="JobWizardToolbarButtonSet(period, Job, jobWizardHelper)"/>
    </Toolbar>
    <PanelRef>
      <DetailViewPanel
        visible="isCreditReportRequired">
        <InputColumn>
          <Label
            desc="User prompt"
            label="&quot;A credit level can be setup for a customer who wants a quick quote.&quot;"/>
          <Label
            id="Label3"
            label="&quot;In order to bind the policy, an actual credit score will be required.&quot;"/>
          <BooleanRadioInput
            editable="!period.HomeownersLine_HOE?.Dwelling?.FirstTimeDeededHome_Ext"
            falseLabel="&quot;Credit Record&quot;"
            id="CreditLevelRecordSelector"
            label="displaykey.Web.SubmissionWizard.CreditReporting.CreditLevelReportSelector"
            trueLabel="&quot;Credit Level&quot;"
            value="period.CreditInfoExt.CreditMode">
            <PostOnChange
              onChange="una.pageprocess.credit.CreditReportScreen.setDefaultCreditReport(period)"/>
          </BooleanRadioInput>
          <InputDivider/>
          <InputSet
            visible="period.CreditInfoExt.CreditMode">
            <Input
              editable="true"
              id="CreditLevel"
              label="displaykey.Web.SubmissionWizard.CreditReporting.CreditLevel"
              required="period.CreditInfoExt.CreditMode"
              value="period.CreditInfoExt.CreditLevel">
              <PostOnChange/>
            </Input>
          </InputSet>
          <InputSet
            hideIfReadOnly="true"
            visible="!period.CreditInfoExt.CreditMode">
            <Label
              id="Label2"
              label="&quot;A credit score is required in order to bind a policy. Request one here:&quot;"/>
            <RangeInput
              editable="true"
              id="CreditReportContact"
              label="displaykey.Web.SubmissionWizard.CreditReporting.CreditReportIndividual"
              required="!period.CreditInfoExt.CreditMode"
              value="period.CreditInfoExt.CreditReport.PolicyContactRole"
              valueRange="una.pageprocess.credit.CreditReportScreen.getPersonContactRoles(period)//period.PolicyContactRoles.where(\ p -&gt; p.Subtype == &quot;PolicyPriNamedInsured&quot; || p.Subtype == &quot;PolicyAddlNamedInsured&quot;)"/>
            <Input
              id="PolicyPrimaryInsured"
              label="displaykey.Web.SubmissionWizard.CreditReporting.PolicyName"
              value="period.CreditInfoExt.CreditReport.PolicyContactRole.ContactDenorm.DisplayName"
              visible="period.CreditInfoExt.CreditReport.PolicyContactRole!= null"/>
            <Input
              id="PolicyInsuredDateOfBirth"
              label="displaykey.Web.SubmissionWizard.CreditReporting.DateOfBirth"
              value="(period.CreditInfoExt.CreditReport.PolicyContactRole.ContactDenorm as Person).DateOfBirth"
              visible="period.CreditInfoExt.CreditReport.PolicyContactRole != null"/>
            <Input
              id="PolicyAddress"
              label="displaykey.Web.SubmissionWizard.CreditReporting.PolicyAddress"
              value="period.CreditInfoExt.CreditReport.PolicyContactRole.ContactDenorm.PrimaryAddress"
              visible="period.CreditInfoExt.CreditReport.PolicyContactRole != null"/>
            <Label
              desc="Note to Display"
              id="AddressNote"
              label="displaykey.Web.SubmissionWizard.CreditReporting.Address.Note"
              visible="true"/>
            <InputSet
              visible="!period.CreditInfoExt.CreditMode">
              <BooleanRadioInput
                available="!(period.CreditInfoExt.CreditReport.PolicyContactRole == null) &amp;&amp; una.pageprocess.credit.CreditReportScreen.isCreditReportInputFieldAvailable(period)"
                editable="true"
                id="AddressChangeQuestion"
                label="displaykey.Web.SubmissionWizard.CreditReporting.AlternateAddressQuestion"
                required="true"
                value="hasPrimaryNamedInsuredMoved"
                visible="false">
                <PostOnChange
                  onChange="una.pageprocess.credit.CreditReportScreen.updateFormerAddressFields(hasPrimaryNamedInsuredMoved, aFormerAddress, period.CreditInfoExt.CreditReport.PolicyContactRole)"/>
              </BooleanRadioInput>
              <Label
                id="FormerAddress"
                label="displaykey.Ext.FormerAddress"
                visible="hasPrimaryNamedInsuredMoved"/>
              <TextInput
                available="una.pageprocess.credit.CreditReportScreen.isCreditReportInputFieldAvailable(period)"
                editable="true"
                id="AddressLine1"
                label="displaykey.Web.ContactDetail.AddressDetail.AddressLine1"
                value="aFormerAddress.AddressLine1"
                visible="hasPrimaryNamedInsuredMoved"/>
              <TextInput
                available="una.pageprocess.credit.CreditReportScreen.isCreditReportInputFieldAvailable(period)"
                editable="true"
                id="AddressLine2"
                label="displaykey.Web.ContactDetail.AddressDetail.AddressLine2"
                value="aFormerAddress.AddressLine2"
                visible="hasPrimaryNamedInsuredMoved"/>
              <TextInput
                available="una.pageprocess.credit.CreditReportScreen.isCreditReportInputFieldAvailable(period)"
                editable="true"
                id="City"
                label="displaykey.Web.ContactDetail.AddressDetail.City"
                value="aFormerAddress.City"
                visible="hasPrimaryNamedInsuredMoved"/>
              <TypeKeyInput
                available="una.pageprocess.credit.CreditReportScreen.isCreditReportInputFieldAvailable(period)"
                editable="true"
                id="State"
                label="address.AddressDisplay.getStateLabel( period.PrimaryNamedInsured.ContactDenorm.PrimaryAddress)"
                value="aFormerAddress.State"
                visible="hasPrimaryNamedInsuredMoved">
                <Reflect
                  triggerIds="State,PostalCode"
                  value="gw.api.contact.AddressAutocompleteUtil.getAutofillValue(period.PrimaryNamedInsured.ContactDenorm.PrimaryAddress.Country,&quot;state&quot;,new String[]{&quot;State&quot;,&quot;PostalCode&quot;},new Object[] {VALUE1,VALUE2})"
                  valueRange="gw.api.contact.AddressAutocompleteUtil.getStates(period.PrimaryNamedInsured.ContactDenorm.PrimaryAddress.Country)"/>
              </TypeKeyInput>
              <TextInput
                available="una.pageprocess.credit.CreditReportScreen.isCreditReportInputFieldAvailable(period)"
                editable="true"
                id="PostalCode"
                label="address.AddressDisplay.getPostalCodeLabel(  period.PrimaryNamedInsured.ContactDenorm.PrimaryAddress)"
                value="aFormerAddress.PostalCode"
                visible="hasPrimaryNamedInsuredMoved"/>
              <TextInput
                available="una.pageprocess.credit.CreditReportScreen.isCreditReportInputFieldAvailable(period)"
                editable="true"
                id="County"
                label="displaykey.Web.ContactDetail.AddressDetail.County"
                value="aFormerAddress.County"
                visible="hasPrimaryNamedInsuredMoved"/>
              <TypeKeyInput
                available="una.pageprocess.credit.CreditReportScreen.isCreditReportInputFieldAvailable(period)"
                editable="true"
                id="Country"
                label="displaykey.Web.ContactDetail.AddressDetail.Country"
                value="aFormerAddress.Country"
                visible="hasPrimaryNamedInsuredMoved">
                <PostOnChange/>
              </TypeKeyInput>
              <BooleanRadioInput
                available="!(creditReportContact == null) &amp;&amp; una.pageprocess.credit.CreditReportScreen.isCreditReportInputFieldAvailable(period)"
                editable="true"
                id="NameChangeQuestion"
                label="displaykey.Ext.NameQuestion"
                required="true"
                value="hasPrimaryNamedInsuredNameChanged"
                visible="true">
                <PostOnChange
                  onChange="updateFormerNameFields()"/>
              </BooleanRadioInput>
              <Label
                id="FormerNameLabel"
                label="displaykey.Ext.FormerName"
                visible="hasPrimaryNamedInsuredNameChanged"/>
              <TextInput
                available="una.pageprocess.credit.CreditReportScreen.isCreditReportInputFieldAvailable(period)"
                editable="true"
                id="AltFIrstName"
                label="displaykey.Ext.FirstName"
                value="formerFirstName"
                visible="hasPrimaryNamedInsuredNameChanged"/>
              <TextInput
                available="una.pageprocess.credit.CreditReportScreen.isCreditReportInputFieldAvailable(period)"
                editable="true"
                id="AltMiddleName"
                label="displaykey.Ext.MidleName"
                value="formerMiddleName"
                visible="hasPrimaryNamedInsuredNameChanged"/>
              <TextInput
                available="una.pageprocess.credit.CreditReportScreen.isCreditReportInputFieldAvailable(period)"
                editable="true"
                id="AltLastName"
                label="displaykey.Ext.LastName"
                value="formerLastName"
                visible="hasPrimaryNamedInsuredNameChanged"/>
              <ButtonInput
                action="HOFCRADisclosurePopup.push(formerFirstName,formerLastName,formerMiddleName,period.Submission.JobNumber,period.PeriodStart,period,creditReportContact,aFormerAddress,hasPrimaryNamedInsuredMoved,hasPrimaryNamedInsuredNameChanged,null)//una.pageprocess.credit.CreditReportScreen.orderCreditReport(creditReportContact,period,hasPrimaryNamedInsuredMoved,hasPrimaryNamedInsuredNameChanged,aFormerAddress,formerFirstName,formerMiddleName,formerLastName)"
                available="una.pageprocess.credit.CreditReportScreen.isCreditReportInputFieldAvailable(period)"
                id="OrderCreditReportButton"
                value="&quot;Order Credit Report&quot;"
                visible="creditReportContact != null &amp;&amp; period.CreditInfoExt.CreditReport == null"/>
              <ButtonInput
                action="una.pageprocess.credit.CreditReportScreen.editCreditReportDetails(period)"
                available="!una.pageprocess.credit.CreditReportScreen.isCreditReportInputFieldAvailable(period)"
                id="EditDetailsButton"
                value="&quot;Edit credit report details&quot;"
                visible="creditReportContact != null &amp;&amp; period.CreditInfoExt.CreditReport != null"/>
            </InputSet>
          </InputSet>
          <InputDivider/>
          <InputSet
            visible="period.CreditInfoExt.CreditReport != null &amp;&amp; !period.CreditInfoExt.CreditMode">
            <Label
              label="displaykey.Web.SubmissionWizard.CreditReporting.CreditReportEnabledPrompt"/>
            <Input
              id="CreditReportName"
              label="displaykey.Web.Policy.Name"
              value="period.CreditInfoExt.CreditReport.PolicyContactRole"/>
            <Input
              id="CreditReportStatus"
              label="displaykey.Web.SubmissionWizard.CreditReporting.CreditStatus"
              value="period.CreditInfoExt.CreditReport.CreditStatus"/>
            <Input
              id="CreditReportDesc"
              label="displaykey.Web.SubmissionWizard.CreditReporting.CreditDescription"
              value="period.CreditInfoExt.CreditReport.CreditStatusDescription"
              visible="period.CreditInfoExt.CreditReport?.CreditStatusDescription?.containsIgnoreCase(displaykey.Web.SubmissionWizard.CreditReporting.Deceased)"/>
            <Input
              editable="true"
              id="CreditReportScore"
              label="displaykey.Web.SubmissionWizard.CreditReporting.CreditScore"
              value="period.CreditInfoExt.CreditReport.CreditScore"
              visible="perm.System.viewcreditscore"/>
            <Input
              id="CreditReportScoreFiltered"
              label="displaykey.Web.SubmissionWizard.CreditReporting.CreditScore"
              value="displaykey.Web.SubmissionWizard.CreditReporting.SuppressedScorePrompt"
              visible="!perm.System.viewcreditscore"/>
            <Input
              id="CreditReportAlternativeName"
              label="displaykey.Web.SubmissionWizard.CreditReporting.AlternateName"
              value="una.pageprocess.credit.CreditReportScreen.buildCreditReportAltName(period)"/>
            <Input
              id="CreditReportAlternativeAddress"
              label="displaykey.Web.SubmissionWizard.CreditReporting.AlternateAddress"
              value="period.CreditInfoExt.CreditReport.AlternateAddress"
              visible="false"/>
            <Input
              id="CreditScoreDate"
              label="displaykey.Web.SubmissionWizard.CreditReporting.DateReceived"
              value="period.CreditInfoExt.CreditReport.CreditScoreDate"/>
            <Input
              id="NcfProductReferenceNumber"
              label="displaykey.Web.SubmissionWizard.CreditReporting.NcfProductReferenceNumber"
              value="period.CreditInfoExt.CreditReport.ProductReferenceNumber"/>
            <InputSet
              visible="period.CreditInfoExt.CreditReport.CreditStatusReasons.Count &gt; 1">
              <InputDivider/>
              <Label
                label="displaykey.Web.SubmissionWizard.CreditReporting.ReasonCode"/>
              <InputIterator
                elementName="creditStatusReasons"
                value="period.CreditInfoExt.CreditReport.CreditStatusReasons">
                <Input
                  id="ReasonCode"
                  value="creditStatusReasons.CreditStatusReasonCode+&quot; - &quot;+creditStatusReasons.CreditStatusReasonDesc"
                  visible="true"/>
              </InputIterator>
            </InputSet>
          </InputSet>
          <InputSet
            visible="period.CreditInfoExt.CreditMode &amp;&amp; period.CreditInfoExt.CreditLevel != null">
            <Label
              label="displaykey.Web.SubmissionWizard.CreditReporting.CreditLevelEnabledPrompt"/>
            <Input
              id="OutputCreditLevelScore"
              label="displaykey.Web.SubmissionWizard.CreditReporting.CreditLevelScore"
              value="period.CreditInfoExt.CreditLevel!=null ? period.CreditInfoExt.CreditLevel.Description : null"/>
          </InputSet>
        </InputColumn>
      </DetailViewPanel>
    </PanelRef>
    <DetailViewPanel
      visible="!isCreditReportRequired">
      <InputColumn>
        <Label
          desc="User prompt"
          label="displaykey.Web.SubmissionWizard.CreditReporting.NoCreditCheckRequired"/>
      </InputColumn>
    </DetailViewPanel>
    <Code><![CDATA[function updateFormerNameFields() {
  period.CreditInfoExt.CreditReport = null
  if (hasPrimaryNamedInsuredNameChanged) {
    // Copy policy name to credit report name
    formerFirstName = (creditReportContact.ContactDenorm as Person).FirstName
    formerMiddleName  = (creditReportContact.ContactDenorm as Person).MiddleName
    formerLastName  = (creditReportContact.ContactDenorm as Person).LastName
  } else {
    // Clear credit report name
    formerFirstName = null
    formerMiddleName  = null
    formerLastName  = null
  }
}

function setCreditRecordandDefaultValue():Boolean{
  una.pageprocess.credit.CreditReportScreen.setDefaultCreditReport(period)
  return period.CreditInfoExt.CreditReport == null ||  (!period.HomeownersLine_HOE?.Dwelling?.FirstTimeDeededHome_Ext)  ? true : false
}]]></Code>
  </Screen>
</PCF>