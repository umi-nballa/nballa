<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../../pcf.xsd">
  <InputSet
    id="HOCoverageInputSet"
    mode="HODW_PersonalPropertyOffResidence_HOE">
    <Require
      name="coveragePattern"
      type="gw.api.productmodel.ClausePattern"/>
    <Require
      name="coverable"
      type="Coverable"/>
    <Require
      name="openForEdit"
      type="boolean"/>
    <Variable
      initialValue="(coverable as Dwelling_HOE)"
      name="dwelling"/>
    <Variable
      initialValue="new una.pageprocess.HOCoverageInputSet(coveragePattern, coverable, openForEdit)"
      name="pcfController"/>
    <HiddenInput
      id="CovPatternCode"
      value="coveragePattern.CodeIdentifier"/>
    <InputGroup
      allowToggle="coveragePattern.allowToggle(coverable)"
      childrenVisible="coverable.getCoverageConditionOrExclusion(coveragePattern) != null"
      id="CovPatternInputGroup"
      label="coveragePattern.DisplayName"
      onToggle="pcfController.onToggle(VALUE)">
      <InputIterator
        elementName="term"
        forceRefreshDespiteChangedEntries="true"
        id="CovTermIterator"
        type="gw.api.domain.covterm.CovTerm"
        value="coverable.getCoverageConditionOrExclusion(coveragePattern).CovTerms.sortBy( \ term -&gt; term.Pattern.Priority )">
        <InputSetRef
          def="CovTermInputSet(term, openForEdit)"
          mode="term.ValueTypeName"/>
      </InputIterator>
      <InputSetRef
        def="ScheduleInputSet(coverable.getCoverageConditionOrExclusion(coveragePattern), openForEdit)"
        mode="coverable.getCoverageConditionOrExclusion(coveragePattern) typeis gw.api.productmodel.Schedule"/>
      <PostOnChange/>
    </InputGroup>
    <!-- <InputGroup
      allowToggle="coveragePattern.allowToggle(coverable)"
      childrenVisible="coverable.getCoverageConditionOrExclusion(coveragePattern) != null"
      id="CovLocationInputGroup"
      label="coveragePattern.DisplayName"
      onToggle="dwelling.setCoverageConditionOrExclusionExists(coveragePattern, VALUE)">
      <Input
        id="TotalIncreasedLimit"
        label="displaykey.Web.Homeowners.Coverages.TotalIncreasedLimit"
        value="getTotalIncreasedLimit() + &quot;%&quot;"/>
      <ListViewInput
        boldLabel="true"
        editable="true"
        id="CovLocationsListLV"
        label="displaykey.Web.Homeowners.HOCoveragesScreen.OtherLocations">
        <Toolbar>
          <IteratorButtons
            addLabel="displaykey.Web.Homeowners.HOCoveragesScreen.AddLocation"
            iterator="LocationsLV"
            removeLabel="displaykey.Web.Homeowners.HOCoveragesScreen.RemoveLocation"/>
        </Toolbar>
        <ListViewPanel
          editable="openForEdit"
          id="LocationsLV">
          <RowIterator
            editable="openForEdit"
            elementName="locItem"
            hideCheckBoxesIfReadOnly="true"
            pickLocation="HOSchedItemWithLocationHOEPopup.push(dwelling, coveragePattern.CodeIdentifier, true, openForEdit)"
            toAdd="dwelling.HODW_PersonalPropertyOffResidence_HOE.addToScheduledItems(locItem)"
            toRemove="dwelling.HODW_PersonalPropertyOffResidence_HOE.removeScheduledItem(locItem)"
            value="dwelling.HODW_PersonalPropertyOffResidence_HOE.ScheduledItems">
            <IteratorSort
              sortBy="locItem.ItemNumber"
              sortOrder="1"/>
            <Row>
              <Cell
                action="HOSchedItemWithLocationHOEPopup.push(dwelling, locItem, coveragePattern.CodeIdentifier, true, openForEdit)"
                id="LocationID"
                label="displaykey.Web.Policy.LocationContainer.Location.LocationName"
                value="locItem.PolicyLocation.DisplayName"/>
              <TypeKeyCell
                editable="true"
                id="LimitId"
                label="displaykey.Web.Homeowners.Coverages.Limit"
                required="true"
                value="locItem.AdditionalLimit"/>
            </Row>
          </RowIterator>
        </ListViewPanel>
      </ListViewInput>
      <PostOnChange/>
    </InputGroup> -->
    <Code><![CDATA[function getTotalIncreasedLimit() : String {
  var total = new java.math.BigInteger("0")
  for (schedItem in dwelling.HODW_PersonalPropertyOffResidence_HOE.ScheduledItems) {
    var code = schedItem.AdditionalLimit.Code
    if (code <> null) {
      total += new java.math.BigInteger(code)
    }
  }
  return total.toString()
}]]></Code>
  </InputSet>
</PCF>